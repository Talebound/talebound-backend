// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.18.0
// source: world_images.sql

package db

import (
	"context"
	"database/sql"
)

const createWorldImages = `-- name: CreateWorldImages :exec
INSERT INTO world_images (world_id) VALUES ($1)
`

func (q *Queries) CreateWorldImages(ctx context.Context, worldID int32) error {
	_, err := q.db.ExecContext(ctx, createWorldImages, worldID)
	return err
}

const deleteWorldImages = `-- name: DeleteWorldImages :exec
DELETE FROM world_images WHERE world_id = $1
`

func (q *Queries) DeleteWorldImages(ctx context.Context, worldID int32) error {
	_, err := q.db.ExecContext(ctx, deleteWorldImages, worldID)
	return err
}

const getWorldImages = `-- name: GetWorldImages :one
SELECT world_id, image_header, image_avatar FROM world_images WHERE world_id = $1 LIMIT 1
`

func (q *Queries) GetWorldImages(ctx context.Context, worldID int32) (WorldImage, error) {
	row := q.db.QueryRowContext(ctx, getWorldImages, worldID)
	var i WorldImage
	err := row.Scan(&i.WorldID, &i.ImageHeader, &i.ImageAvatar)
	return i, err
}

const updateWorldImages = `-- name: UpdateWorldImages :one
UPDATE world_images
SET
    image_header = COALESCE($1, image_header),
    image_avatar = COALESCE($2, image_avatar)
WHERE
    world_id = $3
RETURNING world_id, image_header, image_avatar
`

type UpdateWorldImagesParams struct {
	ImageHeader sql.NullInt32 `json:"image_header"`
	ImageAvatar sql.NullInt32 `json:"image_avatar"`
	WorldID     int32         `json:"world_id"`
}

func (q *Queries) UpdateWorldImages(ctx context.Context, arg UpdateWorldImagesParams) (WorldImage, error) {
	row := q.db.QueryRowContext(ctx, updateWorldImages, arg.ImageHeader, arg.ImageAvatar, arg.WorldID)
	var i WorldImage
	err := row.Scan(&i.WorldID, &i.ImageHeader, &i.ImageAvatar)
	return i, err
}
