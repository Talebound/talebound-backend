DROP VIEW IF EXISTS view_worlds;

DROP TABLE world_stats_history;
DROP TABLE world_stats;

-- Add `based_on` column to `worlds` table
ALTER TABLE worlds ADD COLUMN based_on varchar NOT NULL default '';
ALTER TABLE worlds RENAME COLUMN description TO short_description;
ALTER TABLE worlds ADD COLUMN description_post_id int;
ALTER TABLE worlds ADD CONSTRAINT worlds_description_post_id_fkey FOREIGN KEY(description_post_id) REFERENCES posts(id);

-- Add new fields to table `world_admins`
ALTER TABLE world_admins RENAME COLUMN is_main TO super_admin;
ALTER TABLE world_admins ADD COLUMN approved int NOT NULL default 2;
ALTER TABLE world_admins ADD COLUMN motivational_letter varchar NOT NULL default '';
ALTER TABLE world_admins ALTER COLUMN world_id SET NOT NULL;
ALTER TABLE world_admins ALTER COLUMN user_id SET NOT NULL;
COMMENT ON COLUMN "world_admins"."approved" IS '0 = NO, 1 = YES, 2 = PENDING';

-- Change fields in `world_images`
ALTER TABLE world_images RENAME COLUMN image_header TO header_img_id;
ALTER TABLE world_images ADD COLUMN thumbnail_img_id int;
ALTER TABLE world_images ADD COLUMN avatar_img_id int;
ALTER TABLE world_images ADD CONSTRAINT world_images_thumbnail_img_id_fkey FOREIGN KEY (thumbnail_img_id) REFERENCES images(id);
ALTER TABLE world_images ADD CONSTRAINT world_images_avatar_img_id_fkey FOREIGN KEY (avatar_img_id) REFERENCES images(id);

-- Create new table `world_tags_available`
CREATE TABLE world_tags_available (
  id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  tag varchar UNIQUE NOT NULL
);

-- Create new table `world_tags`
CREATE TABLE world_tags (
    "world_id" int NOT NULL,
    "tag_id" int NOT NULL
);

ALTER TABLE world_tags ADD CONSTRAINT world_tags_world_id_fkey FOREIGN KEY (world_id) REFERENCES worlds(id);
ALTER TABLE world_tags ADD CONSTRAINT world_tags_tag_id_fkey FOREIGN KEY (tag_id) REFERENCES world_tags_available(id);
ALTER TABLE "world_tags" ADD FOREIGN KEY ("tag_id") REFERENCES "world_tags_available" ("id") ON DELETE CASCADE;
CREATE UNIQUE INDEX world_tags_world_id_tag_id_uindex ON world_tags (world_id, tag_id);

-- Create new table `world_activity`
CREATE TABLE world_activity (
    world_id int NOT NULL,
    date date NOT NULL,
    post_count int NOT NULL,
    quest_count int NOT NULL,
    resource_count int NOT NULL
);
ALTER TABLE world_activity
    ADD CONSTRAINT world_activity_world_id_fkey FOREIGN KEY (world_id) REFERENCES worlds(id);
CREATE UNIQUE INDEX ON "world_activity" ("world_id", "date");

-- Create new tables `menus`, `menu_items` and `menu_item_posts`
CREATE TABLE menus (
   id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
   menu_code varchar UNIQUE NOT NULL,
   menu_header_img_id int
);
ALTER TABLE menus
    ADD CONSTRAINT menus_menu_header_img_id_fkey FOREIGN KEY(menu_header_img_id) REFERENCES images(id);


-- Create new table `world_menu`
CREATE TABLE world_menu (
    "world_id" int NOT NULL,
    "menu_id" int NOT NULL
);

ALTER TABLE "world_menu" ADD FOREIGN KEY ("world_id") REFERENCES "worlds" ("id");
ALTER TABLE "world_menu" ADD FOREIGN KEY ("menu_id") REFERENCES "menus" ("id");
CREATE UNIQUE INDEX world_menu_world_id_menu_id_uindex ON world_menu (world_id, menu_id);

CREATE TABLE menu_items (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    menu_id int NOT NULL,
    menu_item_code varchar NOT NULL,
    name varchar NOT NULL,
    position int NOT NULL,
    is_main bool NOT NULL default false,
    description_post_id int
);

ALTER TABLE menu_items ADD CONSTRAINT menu_items_menu_id_fkey FOREIGN KEY(menu_id) REFERENCES menus(id);
ALTER TABLE menu_items ADD CONSTRAINT menu_items_description_post_id_fkey FOREIGN KEY(description_post_id) REFERENCES posts(id);

CREATE TABLE "menu_item_posts" (
   "menu_id" int NOT NULL,
   "menu_item_id" int,
   "post_id" int NOT NULL,
   "position" int NOT NULL
);

ALTER TABLE menu_item_posts ADD CONSTRAINT menu_item_posts_menu_item_id_fkey FOREIGN KEY(menu_item_id) REFERENCES menu_items(id);
ALTER TABLE menu_item_posts ADD CONSTRAINT menu_item_posts_post_id_fkey FOREIGN KEY(post_id) REFERENCES posts(id);
CREATE UNIQUE INDEX menu_item_posts_menu_item_id_post_id_uindex ON menu_item_posts (menu_item_id, post_id);



BEGIN;
ALTER TYPE "image_variant" ADD VALUE '600x400';
ALTER TYPE "image_variant" ADD VALUE '400x600';
ALTER TYPE "image_variant" ADD VALUE '300x200';
ALTER TYPE "image_variant" ADD VALUE '200x300';
ALTER TYPE "image_variant" ADD VALUE '250x50';
COMMIT;


INSERT INTO "image_types" ("id", "name", "variant", "description") VALUES (1200, 'World thumbnail', '600x400', 'Image used as thumbnail for world');
INSERT INTO "image_types" ("id", "name", "variant", "description") VALUES (1300, 'Menu header', '250x50', 'Image used as header of menu section');


-- Alter the `posts` table
ALTER TABLE "posts"
    ADD COLUMN "description" varchar,
    ADD COLUMN "thumbnail_img_id" int;

-- Add foreign key constraint for `posts` table
ALTER TABLE "posts" ADD FOREIGN KEY ("thumbnail_img_id") REFERENCES "images" ("id");

-- Alter the `post_history` table
ALTER TABLE "post_history"
    ADD COLUMN "description" varchar,
    ADD COLUMN "thumbnail_img_id" int;

-- Add foreign key constraint for `post_history` table
ALTER TABLE "post_history" ADD FOREIGN KEY ("thumbnail_img_id") REFERENCES "images" ("id");