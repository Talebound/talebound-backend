// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.18.0
// source: world_images.sql

package db

import (
	"context"
	"database/sql"
)

const createWorldImages = `-- name: CreateWorldImages :exec
INSERT INTO world_images (world_id) VALUES ($1)
`

func (q *Queries) CreateWorldImages(ctx context.Context, worldID int32) error {
	_, err := q.db.ExecContext(ctx, createWorldImages, worldID)
	return err
}

const deleteWorldImages = `-- name: DeleteWorldImages :exec
DELETE FROM world_images WHERE world_id = $1
`

func (q *Queries) DeleteWorldImages(ctx context.Context, worldID int32) error {
	_, err := q.db.ExecContext(ctx, deleteWorldImages, worldID)
	return err
}

const getWorldImages = `-- name: GetWorldImages :one
SELECT world_id, header_img_id, image_avatar, thumbnail_img_id, avatar_img_id FROM world_images WHERE world_id = $1 LIMIT 1
`

func (q *Queries) GetWorldImages(ctx context.Context, worldID int32) (WorldImage, error) {
	row := q.db.QueryRowContext(ctx, getWorldImages, worldID)
	var i WorldImage
	err := row.Scan(
		&i.WorldID,
		&i.HeaderImgID,
		&i.ImageAvatar,
		&i.ThumbnailImgID,
		&i.AvatarImgID,
	)
	return i, err
}

const updateWorldImages = `-- name: UpdateWorldImages :one
UPDATE world_images
SET
    header_img_id = COALESCE($1, header_img_id),
    thumbnail_img_id = COALESCE($2, thumbnail_img_id),
    avatar_img_id = COALESCE($3, avatar_img_id)
WHERE
    world_id = $4
RETURNING world_id, header_img_id, image_avatar, thumbnail_img_id, avatar_img_id
`

type UpdateWorldImagesParams struct {
	HeaderImgID    sql.NullInt32 `json:"header_img_id"`
	ThumbnailImgID sql.NullInt32 `json:"thumbnail_img_id"`
	AvatarImgID    sql.NullInt32 `json:"avatar_img_id"`
	WorldID        int32         `json:"world_id"`
}

func (q *Queries) UpdateWorldImages(ctx context.Context, arg UpdateWorldImagesParams) (WorldImage, error) {
	row := q.db.QueryRowContext(ctx, updateWorldImages,
		arg.HeaderImgID,
		arg.ThumbnailImgID,
		arg.AvatarImgID,
		arg.WorldID,
	)
	var i WorldImage
	err := row.Scan(
		&i.WorldID,
		&i.HeaderImgID,
		&i.ImageAvatar,
		&i.ThumbnailImgID,
		&i.AvatarImgID,
	)
	return i, err
}
