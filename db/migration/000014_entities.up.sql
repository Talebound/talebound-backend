CREATE TYPE "entity_type" AS ENUM (
    'unknown',
    'post',
    'map',
    'location',
    'character',
    'image'
);


CREATE TABLE "entities" (
    "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "type" entity_type NOT NULL,
    "post_id" int,
    "map_id" int,
    "location_id" int,
    "image_id" int
);

CREATE TABLE "entity_groups" (
    "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "name" varchar,
    "description" varchar,
    "style" varchar DEFAULT 'framed',
    "direction" varchar DEFAULT 'vertical'
);

CREATE TABLE "entity_group_content" (
    "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "entity_group_id" int NOT NULL,
    "position" int NOT NULL,
    "content_entity_id" int,
    "content_entity_group_id" int
);

ALTER TABLE "entities" ADD FOREIGN KEY ("post_id") REFERENCES "posts" ("id");

ALTER TABLE "entities" ADD FOREIGN KEY ("map_id") REFERENCES "maps" ("id");

ALTER TABLE "entities" ADD FOREIGN KEY ("location_id") REFERENCES "locations" ("id");

ALTER TABLE "entities" ADD FOREIGN KEY ("image_id") REFERENCES "images" ("id");

ALTER TABLE "entity_group_content" ADD FOREIGN KEY ("entity_group_id") REFERENCES "entity_groups" ("id");

ALTER TABLE "entity_group_content" ADD FOREIGN KEY ("content_entity_id") REFERENCES "entities" ("id");

ALTER TABLE "entity_group_content" ADD FOREIGN KEY ("content_entity_group_id") REFERENCES "entity_groups" ("id");

-- add entity_group_id column into menu_items
ALTER TABLE menu_items ADD COLUMN entity_group_id int;

-- add dimension columns into images
ALTER TABLE images ADD COLUMN width int NOT NULL DEFAULT 0;
ALTER TABLE images ADD COLUMN height int NOT NULL  DEFAULT 0;

ALTER TABLE menu_items ADD CONSTRAINT menu_items_entity_group_id_fkey FOREIGN KEY (entity_group_id) REFERENCES entity_groups(id);


--script to create default entity group for each menu item
DO $$
DECLARE
    menuItem RECORD;
BEGIN
    -- For each menu item
    FOR menuItem IN (SELECT * FROM menu_items) LOOP
            -- 1. Insert a new entity_group and get its id
            INSERT INTO entity_groups(name, description)
            VALUES (menuItem.name, 'Description of ' || menuItem.name) -- You can customize the name and description
            RETURNING id INTO menuItem.entity_group_id;

            -- 2. Update the menu_item's entity_group_id with the new entity_group's id
            UPDATE menu_items
            SET entity_group_id = menuItem.entity_group_id
            WHERE id = menuItem.id;
        END LOOP;
END $$;