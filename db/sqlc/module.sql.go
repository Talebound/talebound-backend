// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.17.2
// source: module.sql

package db

import (
	"context"
	"database/sql"
)

const getModuleId = `-- name: GetModuleId :one
SELECT
    id as module_id, module_type
FROM modules
WHERE
    world_id = COALESCE($1, world_id) AND
    quest_id = COALESCE($2, quest_id) AND
    character_id = COALESCE($3, character_id) AND
    system_id = COALESCE($4, system_id)
`

type GetModuleIdParams struct {
	WorldID     sql.NullInt32 `json:"world_id"`
	QuestID     sql.NullInt32 `json:"quest_id"`
	CharacterID sql.NullInt32 `json:"character_id"`
	SystemID    sql.NullInt32 `json:"system_id"`
}

type GetModuleIdRow struct {
	ModuleID   int32      `json:"module_id"`
	ModuleType ModuleType `json:"module_type"`
}

func (q *Queries) GetModuleId(ctx context.Context, arg GetModuleIdParams) (GetModuleIdRow, error) {
	row := q.db.QueryRowContext(ctx, getModuleId,
		arg.WorldID,
		arg.QuestID,
		arg.CharacterID,
		arg.SystemID,
	)
	var i GetModuleIdRow
	err := row.Scan(&i.ModuleID, &i.ModuleType)
	return i, err
}
