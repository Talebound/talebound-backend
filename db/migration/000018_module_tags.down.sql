
-- Return table `world_tags_available`
CREATE TABLE world_tags_available (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    tag varchar UNIQUE NOT NULL
);

-- Return table `world_tags`
CREATE TABLE world_tags (
    "world_id" int NOT NULL,
    "tag_id" int NOT NULL
);

ALTER TABLE world_tags ADD CONSTRAINT world_tags_world_id_fkey FOREIGN KEY (world_id) REFERENCES worlds(id);
ALTER TABLE world_tags ADD CONSTRAINT world_tags_tag_id_fkey FOREIGN KEY (tag_id) REFERENCES world_tags_available(id);
ALTER TABLE "world_tags" ADD FOREIGN KEY ("tag_id") REFERENCES "world_tags_available" ("id") ON DELETE CASCADE;
CREATE UNIQUE INDEX world_tags_world_id_tag_id_uindex ON world_tags (world_id, tag_id);

INSERT INTO world_tags_available (tag)
SELECT tag FROM module_type_tags_available WHERE module_type = 'world'::module_type;

INSERT INTO world_tags (world_id, tag_id)
SELECT m.world_id, wta.id
FROM
    module_tags mt
    JOIN module_type_tags_available mtta ON mtta.id = mt.tag_id
    JOIN world_tags_available wta ON wta.tag = mtta.tag
    JOIN modules m ON m.id = mt.module_id
WHERE world_id IS NOT NULL;

DROP VIEW view_module_type_tags_available;
CREATE VIEW view_world_tags_available AS
SELECT
    wta.*,
    cast(COUNT(wt.world_id) as integer) as count
FROM
    world_tags_available wta
    LEFT JOIN world_tags wt ON wt.tag_id = wta.id
GROUP BY
    wta.id;
;

DROP VIEW view_worlds;
CREATE VIEW view_worlds AS
SELECT
    w.*,
    i_header.url as image_header,
    i_thumbnail.url as image_thumbnail,
    i_avatar.url as image_avatar,
    tags.tags AS tags,
    COALESCE(activity.activity_post_count, 0) AS activity_post_count,
    COALESCE(activity.activity_quest_count, 0) AS activity_quest_count,
    COALESCE(activity.activity_resource_count, 0) AS activity_resource_count,
    wm.menu_id as world_menu_id
FROM
    worlds w
        JOIN world_images wi ON w.id = wi.world_id
        JOIN world_menu wm ON w.id = wm.world_id
        LEFT JOIN (
        SELECT
            wa.world_id,
            cast(sum(wa.post_count) as integer) AS activity_post_count,
            cast(sum(wa.quest_count) as integer) AS activity_quest_count,
            cast(sum(wa.resource_count) as integer) AS activity_resource_count
        FROM
            world_activity wa
        WHERE
                wa.date >= (now() - interval '30 days')
        GROUP BY wa.world_id
    ) activity ON activity.world_id = w.id
        LEFT JOIN (
        SELECT
            wt.world_id,
            cast(array_agg(t.tag) as varchar[]) AS tags
        FROM
            world_tags wt
                LEFT JOIN world_tags_available t ON t.id = wt.tag_id
        GROUP BY wt.world_id
    ) tags ON tags.world_id = w.id
        LEFT JOIN images i_header on wi.header_img_id = i_header.id
        LEFT JOIN images i_thumbnail on wi.thumbnail_img_id = i_thumbnail.id
        LEFT JOIN images i_avatar on wi.avatar_img_id = i_avatar.id
;



ALTER TABLE "module_entity_tags_available" RENAME TO "module_tags_available";

DROP TABLE module_tags;
DROP TABLE module_type_tags_available;

ALTER TABLE "modules" DROP COLUMN "module_type";

DROP TYPE IF EXISTS "module_type";

