-- SQL dump generated using DBML (dbml-lang.org)
-- Database: PostgreSQL
-- Generated at: 2023-08-20T21:36:43.182Z

CREATE TYPE "image_variant" AS ENUM (
  '100x100',
  '1200x800',
  '150x150',
  '1920x300',
  '200x200',
  '300x300',
  '30x30',
  'original',
  'public',
  '600x400',
  '400x600',
  '300x200',
  '200x300',
  '250x50'
);

CREATE TYPE "evaluation_type" AS ENUM (
  'self',
  'dm'
);

CREATE TABLE "image_types" (
  "id" int UNIQUE NOT NULL,
  "name" varchar UNIQUE NOT NULL,
  "description" text NOT NULL,
  "variant" image_variant NOT NULL
);

CREATE TABLE "images" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" int NOT NULL,
  "img_guid" uuid UNIQUE,
  "image_type_id" int,
  "name" varchar UNIQUE,
  "url" varchar NOT NULL,
  "base_url" varchar NOT NULL,
  "created_at" timestamptz NOT NULL DEFAULT (now())
);

CREATE TABLE "users" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "username" varchar UNIQUE NOT NULL,
  "hashed_password" varchar NOT NULL,
  "email" varchar UNIQUE NOT NULL,
  "img_id" int,
  "password_changed_at" timestamptz NOT NULL DEFAULT '0001-01-01 00:00:00Z',
  "created_at" timestamptz NOT NULL DEFAULT (now()),
  "is_email_verified" bool NOT NULL DEFAULT false,
  "introduction_post_id" int
);

CREATE TABLE "sessions" (
  "id" uuid PRIMARY KEY,
  "user_id" int NOT NULL,
  "username" varchar NOT NULL,
  "refresh_token" varchar NOT NULL,
  "user_agent" varchar NOT NULL,
  "client_ip" varchar NOT NULL,
  "is_blocked" boolean NOT NULL DEFAULT false,
  "created_at" timestamptz NOT NULL DEFAULT (now()),
  "expired_at" timestamptz NOT NULL DEFAULT (now() + INTERVAL '15 minutes')
);

CREATE TABLE "evaluations" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar NOT NULL,
  "description" varchar NOT NULL,
  "evaluation_type" evaluation_type NOT NULL
);

CREATE TABLE "evaluation_votes" (
  "evaluation_id" int NOT NULL,
  "user_id" int NOT NULL,
  "user_id_voter" int NOT NULL,
  "value" float NOT NULL,
  "created_at" timestamptz NOT NULL DEFAULT (now())
);

CREATE TABLE "user_password_reset" (
  "user_id" int NOT NULL,
  "code" varchar NOT NULL,
  "expired_at" timestamptz NOT NULL DEFAULT (now() + INTERVAL '15 minutes')
);

CREATE TABLE "verify_emails" (
  "id" bigserial PRIMARY KEY,
  "user_id" int NOT NULL,
  "email" varchar NOT NULL,
  "secret_code" varchar NOT NULL,
  "is_used" boolean NOT NULL DEFAULT false,
  "created_at" timestamptz NOT NULL DEFAULT (now()),
  "expired_at" timestamptz NOT NULL DEFAULT (now() + INTERVAL '15 minutes')
);

CREATE TABLE "roles" (
  "id" int UNIQUE NOT NULL,
  "name" varchar UNIQUE NOT NULL,
  "description" text NOT NULL
);

CREATE TABLE "user_roles" (
  "user_id" int NOT NULL,
  "role_id" int NOT NULL,
  "created_at" timestamptz NOT NULL DEFAULT (now())
);

CREATE TABLE "chat" (
  "id" bigserial PRIMARY KEY,
  "user_id" int NOT NULL,
  "text" varchar NOT NULL,
  "created_at" timestamp NOT NULL DEFAULT (now())
);

CREATE TABLE "worlds" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar UNIQUE NOT NULL,
  "based_on" varchar NOT NULL,
  "public" boolean NOT NULL DEFAULT false,
  "created_at" timestamptz NOT NULL DEFAULT (now()),
  "short_description" varchar NOT NULL DEFAULT '',
  "description_post_id" int
);

CREATE TABLE "world_admins" (
  "world_id" int NOT NULL,
  "user_id" int NOT NULL,
  "created_at" timestamptz NOT NULL DEFAULT (now()),
  "super_admin" boolean NOT NULL DEFAULT false,
  "approved" int NOT NULL,
  "motivational_letter" varchar NOT NULL
);

CREATE TABLE "world_menu" (
  "world_id" int NOT NULL,
  "menu_id" int NOT NULL
);

CREATE TABLE "world_tags_available" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "tag" varchar UNIQUE NOT NULL
);

CREATE TABLE "world_tags" (
  "world_id" int NOT NULL,
  "tag_id" int NOT NULL
);

CREATE TABLE "world_images" (
  "world_id" int PRIMARY KEY,
  "header_img_id" int,
  "thumbnail_img_id" int,
  "avatar_img_id" int
);

CREATE TABLE "world_activity" (
  "world_id" int NOT NULL,
  "date" date NOT NULL,
  "post_count" int NOT NULL,
  "quest_count" int NOT NULL,
  "resource_count" int NOT NULL
);

CREATE TABLE "races" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "world_id" int NOT NULL,
  "name" varchar NOT NULL,
  "img_id" int,
  "is_playable" boolean NOT NULL DEFAULT true
);

CREATE TABLE "properties" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "world_id" int NOT NULL,
  "name" varchar NOT NULL
);

CREATE TABLE "race_properties" (
  "race_id" int NOT NULL,
  "property_id" int NOT NULL,
  "min_value" int NOT NULL,
  "max_value" int NOT NULL
);

CREATE TABLE "characters" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" int NOT NULL,
  "world_id" int NOT NULL,
  "race_id" int NOT NULL,
  "img_id" int,
  "name" varchar NOT NULL,
  "level" int NOT NULL,
  "experience" int NOT NULL,
  "skill_points" int NOT NULL,
  "property_points" int NOT NULL,
  "created_at" timestamptz NOT NULL DEFAULT (now())
);

CREATE TABLE "character_properties" (
  "character_id" int NOT NULL,
  "property_id" int NOT NULL,
  "value" int NOT NULL
);

CREATE TABLE "skills" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "world_id" int NOT NULL,
  "img_id" int,
  "name" varchar NOT NULL,
  "max_level" int NOT NULL
);

CREATE TABLE "skill_requirements" (
  "id" int PRIMARY KEY,
  "skill_id" int NOT NULL,
  "level" int,
  "race_id" int
);

CREATE TABLE "skill_requirement_skills" (
  "skill_requirement_id" int NOT NULL,
  "skill_id" int NOT NULL,
  "level" int NOT NULL
);

CREATE TABLE "skill_requirement_properties" (
  "skill_requirement_id" int NOT NULL,
  "property_id" int NOT NULL,
  "value" int NOT NULL
);

CREATE TABLE "character_skills" (
  "character_id" int NOT NULL,
  "skill_id" int NOT NULL,
  "skill_level" int NOT NULL
);

CREATE TABLE "posts" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "post_type_id" int NOT NULL,
  "user_id" int NOT NULL,
  "title" varchar NOT NULL,
  "content" varchar NOT NULL,
  "created_at" timestamptz NOT NULL DEFAULT (now()),
  "deleted_at" timestamptz,
  "last_updated_at" timestamptz,
  "last_updated_user_id" int,
  "is_draft" bool NOT NULL,
  "is_private" bool NOT NULL
);

CREATE TABLE "post_types" (
  "id" int PRIMARY KEY,
  "name" varchar NOT NULL,
  "draftable" bool NOT NULL DEFAULT true,
  "privatable" bool NOT NULL DEFAULT false
);

CREATE TABLE "post_history" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "post_id" int NOT NULL,
  "post_type_id" int NOT NULL,
  "user_id" int NOT NULL,
  "title" varchar NOT NULL,
  "content" varchar NOT NULL,
  "created_at" timestamptz NOT NULL DEFAULT (now()),
  "deleted_at" timestamptz,
  "last_updated_at" timestamptz,
  "last_updated_user_id" int,
  "is_draft" bool NOT NULL,
  "is_private" bool NOT NULL
);

CREATE TABLE "menus" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "menu_code" varchar UNIQUE NOT NULL,
  "menu_header_img_id" int
);

CREATE TABLE "menu_items" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "menu_id" int NOT NULL,
  "menu_item_code" varchar NOT NULL,
  "name" varchar NOT NULL,
  "position" int NOT NULL,
  "is_main" bool NOT NULL DEFAULT false,
  "description_post_id" int
);

CREATE TABLE "menu_item_posts" (
  "menu_item_id" int NOT NULL,
  "post_id" int NOT NULL,
  "position" int NOT NULL
);

CREATE UNIQUE INDEX ON "evaluation_votes" ("evaluation_id", "user_id", "user_id_voter");

CREATE UNIQUE INDEX ON "user_roles" ("role_id", "user_id");

CREATE UNIQUE INDEX ON "world_admins" ("world_id", "user_id");

CREATE UNIQUE INDEX ON "world_menu" ("world_id", "menu_id");

CREATE UNIQUE INDEX ON "world_tags" ("world_id", "tag_id");

CREATE UNIQUE INDEX ON "world_activity" ("world_id", "date");

CREATE UNIQUE INDEX ON "races" ("world_id", "name");

CREATE UNIQUE INDEX ON "properties" ("world_id", "name");

CREATE UNIQUE INDEX ON "race_properties" ("race_id", "property_id");

CREATE UNIQUE INDEX ON "characters" ("world_id", "name");

CREATE UNIQUE INDEX ON "character_properties" ("character_id", "property_id");

CREATE UNIQUE INDEX ON "menu_item_posts" ("menu_item_id", "post_id");

COMMENT ON COLUMN "image_types"."variant" IS 'Variant name from cloudflare. ';

COMMENT ON COLUMN "world_admins"."approved" IS '0 = NO, 1 = YES, 2 = PENDING';

ALTER TABLE "images" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "images" ADD FOREIGN KEY ("image_type_id") REFERENCES "image_types" ("id");

ALTER TABLE "users" ADD FOREIGN KEY ("img_id") REFERENCES "images" ("id");

ALTER TABLE "users" ADD FOREIGN KEY ("introduction_post_id") REFERENCES "posts" ("id");

ALTER TABLE "sessions" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "evaluation_votes" ADD FOREIGN KEY ("evaluation_id") REFERENCES "evaluations" ("id");

ALTER TABLE "evaluation_votes" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "evaluation_votes" ADD FOREIGN KEY ("user_id_voter") REFERENCES "users" ("id");

ALTER TABLE "user_password_reset" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "verify_emails" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "user_roles" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "user_roles" ADD FOREIGN KEY ("role_id") REFERENCES "roles" ("id");

ALTER TABLE "chat" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "worlds" ADD FOREIGN KEY ("description_post_id") REFERENCES "posts" ("id");

ALTER TABLE "world_admins" ADD FOREIGN KEY ("world_id") REFERENCES "worlds" ("id");

ALTER TABLE "world_admins" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "world_menu" ADD FOREIGN KEY ("world_id") REFERENCES "worlds" ("id");

ALTER TABLE "world_menu" ADD FOREIGN KEY ("menu_id") REFERENCES "menus" ("id");

ALTER TABLE "world_tags" ADD FOREIGN KEY ("world_id") REFERENCES "worlds" ("id");

ALTER TABLE "world_tags" ADD FOREIGN KEY ("tag_id") REFERENCES "world_tags_available" ("id") ON DELETE CASCADE;

ALTER TABLE "world_images" ADD FOREIGN KEY ("world_id") REFERENCES "worlds" ("id");

ALTER TABLE "world_images" ADD FOREIGN KEY ("header_img_id") REFERENCES "images" ("id");

ALTER TABLE "world_images" ADD FOREIGN KEY ("thumbnail_img_id") REFERENCES "images" ("id");

ALTER TABLE "world_images" ADD FOREIGN KEY ("avatar_img_id") REFERENCES "images" ("id");

ALTER TABLE "world_activity" ADD FOREIGN KEY ("world_id") REFERENCES "worlds" ("id");

ALTER TABLE "races" ADD FOREIGN KEY ("world_id") REFERENCES "worlds" ("id");

ALTER TABLE "races" ADD FOREIGN KEY ("img_id") REFERENCES "images" ("id");

ALTER TABLE "properties" ADD FOREIGN KEY ("world_id") REFERENCES "worlds" ("id");

ALTER TABLE "race_properties" ADD FOREIGN KEY ("race_id") REFERENCES "races" ("id");

ALTER TABLE "race_properties" ADD FOREIGN KEY ("property_id") REFERENCES "properties" ("id");

ALTER TABLE "characters" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "characters" ADD FOREIGN KEY ("world_id") REFERENCES "worlds" ("id");

ALTER TABLE "characters" ADD FOREIGN KEY ("race_id") REFERENCES "races" ("id");

ALTER TABLE "characters" ADD FOREIGN KEY ("img_id") REFERENCES "images" ("id");

ALTER TABLE "character_properties" ADD FOREIGN KEY ("character_id") REFERENCES "characters" ("id");

ALTER TABLE "character_properties" ADD FOREIGN KEY ("property_id") REFERENCES "properties" ("id");

ALTER TABLE "skills" ADD FOREIGN KEY ("world_id") REFERENCES "worlds" ("id");

ALTER TABLE "skills" ADD FOREIGN KEY ("img_id") REFERENCES "images" ("id");

ALTER TABLE "skill_requirements" ADD FOREIGN KEY ("skill_id") REFERENCES "skills" ("id");

ALTER TABLE "skill_requirements" ADD FOREIGN KEY ("race_id") REFERENCES "races" ("id");

ALTER TABLE "skill_requirement_skills" ADD FOREIGN KEY ("skill_requirement_id") REFERENCES "skill_requirements" ("id");

ALTER TABLE "skill_requirement_skills" ADD FOREIGN KEY ("skill_id") REFERENCES "skills" ("id");

ALTER TABLE "skill_requirement_properties" ADD FOREIGN KEY ("skill_requirement_id") REFERENCES "skill_requirements" ("id");

ALTER TABLE "skill_requirement_properties" ADD FOREIGN KEY ("property_id") REFERENCES "properties" ("id");

ALTER TABLE "character_skills" ADD FOREIGN KEY ("character_id") REFERENCES "characters" ("id");

ALTER TABLE "character_skills" ADD FOREIGN KEY ("skill_id") REFERENCES "skills" ("id");

ALTER TABLE "posts" ADD FOREIGN KEY ("post_type_id") REFERENCES "post_types" ("id");

ALTER TABLE "posts" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "posts" ADD FOREIGN KEY ("last_updated_user_id") REFERENCES "users" ("id");

ALTER TABLE "post_history" ADD FOREIGN KEY ("post_id") REFERENCES "posts" ("id");

ALTER TABLE "post_history" ADD FOREIGN KEY ("post_type_id") REFERENCES "post_types" ("id");

ALTER TABLE "post_history" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "post_history" ADD FOREIGN KEY ("last_updated_user_id") REFERENCES "users" ("id");

ALTER TABLE "menus" ADD FOREIGN KEY ("menu_header_img_id") REFERENCES "images" ("id");

ALTER TABLE "menu_items" ADD FOREIGN KEY ("menu_id") REFERENCES "menus" ("id");

ALTER TABLE "menu_items" ADD FOREIGN KEY ("description_post_id") REFERENCES "posts" ("id");

ALTER TABLE "menu_item_posts" ADD FOREIGN KEY ("menu_item_id") REFERENCES "menu_items" ("id");

ALTER TABLE "menu_item_posts" ADD FOREIGN KEY ("post_id") REFERENCES "posts" ("id");
