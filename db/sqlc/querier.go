// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.17.2

package db

import (
	"context"

	"github.com/google/uuid"
)

type Querier interface {
	AddChatMessage(ctx context.Context, arg AddChatMessageParams) (Chat, error)
	AddUserPasswordReset(ctx context.Context, arg AddUserPasswordResetParams) (UserPasswordReset, error)
	AddUserRole(ctx context.Context, arg AddUserRoleParams) (UserRole, error)
	CreateEvaluationVote(ctx context.Context, arg CreateEvaluationVoteParams) (EvaluationVote, error)
	CreateSession(ctx context.Context, arg CreateSessionParams) (Session, error)
	CreateUser(ctx context.Context, arg CreateUserParams) (User, error)
	CreateVerifyEmail(ctx context.Context, arg CreateVerifyEmailParams) (VerifyEmail, error)
	DeleteChatMessage(ctx context.Context, id int64) error
	DeleteEvaluationVote(ctx context.Context, arg DeleteEvaluationVoteParams) error
	DeleteUserPasswordReset(ctx context.Context, arg DeleteUserPasswordResetParams) error
	GetAverageUserEvaluationsByType(ctx context.Context, arg GetAverageUserEvaluationsByTypeParams) ([]GetAverageUserEvaluationsByTypeRow, error)
	GetChatMessage(ctx context.Context, id int64) (GetChatMessageRow, error)
	GetChatMessages(ctx context.Context, arg GetChatMessagesParams) ([]GetChatMessagesRow, error)
	GetEvaluationById(ctx context.Context, evaluationID int32) (Evaluation, error)
	GetEvaluationVoteByEvaluationIdUserIdAndVoter(ctx context.Context, arg GetEvaluationVoteByEvaluationIdUserIdAndVoterParams) (EvaluationVote, error)
	GetEvaluationVotesByUserId(ctx context.Context, userID int32) ([]EvaluationVote, error)
	GetEvaluationVotesByUserIdAndVoter(ctx context.Context, arg GetEvaluationVotesByUserIdAndVoterParams) ([]EvaluationVote, error)
	GetEvaluationsByType(ctx context.Context, evaluationType EvaluationType) ([]Evaluation, error)
	GetSession(ctx context.Context, id uuid.UUID) (Session, error)
	GetUserByEmail(ctx context.Context, email string) (User, error)
	GetUserById(ctx context.Context, id int32) (User, error)
	GetUserByUsername(ctx context.Context, username string) (User, error)
	GetUserPasswordReset(ctx context.Context, code string) (UserPasswordReset, error)
	GetUserRoles(ctx context.Context, userID int32) ([]GetUserRolesRow, error)
	GetUsers(ctx context.Context, arg GetUsersParams) ([]User, error)
	HasUserRole(ctx context.Context, arg HasUserRoleParams) (HasUserRoleRow, error)
	RemoveUserRole(ctx context.Context, arg RemoveUserRoleParams) error
	UpdateEvaluationVote(ctx context.Context, arg UpdateEvaluationVoteParams) (EvaluationVote, error)
	UpdateUser(ctx context.Context, arg UpdateUserParams) (User, error)
	UpdateVerifyEmail(ctx context.Context, arg UpdateVerifyEmailParams) (VerifyEmail, error)
}

var _ Querier = (*Queries)(nil)
