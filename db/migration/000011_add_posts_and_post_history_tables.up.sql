


CREATE TABLE "posts" (
     "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
     "post_type_id" int NOT NULL,
     "user_id" int NOT NULL,
     "title" varchar NOT NULL,
     "content" varchar NOT NULL,
     "created_at" timestamptz NOT NULL DEFAULT (now()),
     "deleted_at" timestamptz,
     "last_updated_at" timestamptz,
     "last_updated_user_id" int,
     "is_draft" bool NOT NULL,
     "is_private" bool NOT NULL
);

CREATE TABLE "post_types" (
    "id" int PRIMARY KEY,
    "name" varchar NOT NULL,
    "draftable" bool NOT NULL DEFAULT true,
    "privatable" bool NOT NULL DEFAULT false
);

CREATE TABLE "post_history" (
    "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "post_id" int NOT NULL,
    "post_type_id" int NOT NULL,
    "user_id" int NOT NULL,
    "title" varchar NOT NULL,
    "content" varchar NOT NULL,
    "created_at" timestamptz NOT NULL DEFAULT (now()),
    "deleted_at" timestamptz,
    "last_updated_at" timestamptz,
    "last_updated_user_id" int,
    "is_draft" bool NOT NULL,
    "is_private" bool NOT NULL
);


ALTER TABLE "users" ADD COLUMN "introduction_post_id" int;

ALTER TABLE "users" ADD FOREIGN KEY ("introduction_post_id") REFERENCES "posts" ("id");

ALTER TABLE "posts" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "posts" ADD FOREIGN KEY ("last_updated_user_id") REFERENCES "users" ("id");

ALTER TABLE "posts" ADD FOREIGN KEY ("post_type_id") REFERENCES "post_types" ("id");

ALTER TABLE "post_history" ADD FOREIGN KEY ("post_id") REFERENCES "posts" ("id");

ALTER TABLE "post_history" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "post_history" ADD FOREIGN KEY ("post_type_id") REFERENCES "post_types" ("id");

ALTER TABLE "post_history" ADD FOREIGN KEY ("last_updated_user_id") REFERENCES "users" ("id");


INSERT INTO "post_types" ("id", "name", "draftable", "privatable")
VALUES
    (100, 'Universal', true, true),
    (200, 'Quest post', true, false),
    (300, 'World description', true, false),
    (400, 'Rule set description', true, false),
    (500, 'Quest description', true, false),
    (600, 'Character description', true, false),
    (700, 'News', true, false),
    (800, 'User introduction', true, false)
;

DROP VIEW IF EXISTS "view_users";

CREATE VIEW view_users AS
SELECT
    u.*,
    i.id as avatar_image_id,
    i.url as avatar_image_url,
    i.img_guid as avatar_image_guid,
    p.deleted_at as introduction_post_deleted_at
FROM
    users AS u
    LEFT JOIN images i ON u.img_id = i.id
    LEFT JOIN posts p ON u.introduction_post_id = p.id
;

CREATE VIEW view_posts AS
SELECT
    p.*,
    pt.name as post_type_name,
    pt.draftable as post_type_draftable,
    pt.privatable as post_type_privatable
FROM
    posts p
    JOIN post_types pt ON p.post_type_id = pt.id
;

ALTER TYPE "image_variant" ADD VALUE 'original';