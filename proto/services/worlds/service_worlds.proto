syntax = "proto3";

package pb;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

import "services/worlds/rpc_world.proto";
import "services/worlds/world.proto";
import "services/images/image.proto";
import "services/posts/post.proto";


option go_package = "github.com/the-medo/talebound-backend/pb";

service Worlds {

  rpc CreateWorld(CreateWorldRequest) returns (World) {
    option (google.api.http) = {
      post: "/worlds"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "creates completely new world";
      summary: "Create world";
    };
  };

  rpc UpdateWorld(UpdateWorldRequest) returns (World) {
    option (google.api.http) = {
      patch: "/worlds/{worldId}"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "updates world properties (NO images or stats!)";
      summary: "Update world";
    };
  };

  rpc UploadWorldImage(UploadWorldImageRequest) returns (Image) {
    option (google.api.http) = {
      post: "/worlds/{worldId}/images"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "uploads and sets new image for given world";
      summary: "Upload image for world";
    };
  };

  rpc GetWorlds(GetWorldsRequest) returns (GetWorldsResponse) {
    option (google.api.http) = {
      get: "/worlds"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "gets list of worlds";
      summary: "Get worlds ";
    };
  };

  rpc GetWorldById(GetWorldByIdRequest) returns (World) {
    option (google.api.http) = {
      get: "/worlds/{worldId}"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "gets world by ID";
      summary: "Get world by ID ";
    };
  };

  rpc UpdateWorldIntroduction(UpdateWorldIntroductionRequest) returns (Post) {
    option (google.api.http) = {
      patch: "/worlds/{worldId}/introduction"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "creates/updates world introduction";
      summary: "Update world introduction";
    };
  };
}