// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.22.0
// source: services/maps/rpc_map.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetMapByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MapId int32 `protobuf:"varint,1,opt,name=mapId,proto3" json:"mapId,omitempty"`
}

func (x *GetMapByIdRequest) Reset() {
	*x = GetMapByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_maps_rpc_map_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMapByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMapByIdRequest) ProtoMessage() {}

func (x *GetMapByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_maps_rpc_map_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMapByIdRequest.ProtoReflect.Descriptor instead.
func (*GetMapByIdRequest) Descriptor() ([]byte, []int) {
	return file_services_maps_rpc_map_proto_rawDescGZIP(), []int{0}
}

func (x *GetMapByIdRequest) GetMapId() int32 {
	if x != nil {
		return x.MapId
	}
	return 0
}

type GetMapsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModuleId *int32  `protobuf:"varint,1,opt,name=moduleId,proto3,oneof" json:"moduleId,omitempty"`
	Tags     []int32 `protobuf:"varint,2,rep,packed,name=tags,proto3" json:"tags,omitempty"`
	OrderBy  *string `protobuf:"bytes,3,opt,name=orderBy,proto3,oneof" json:"orderBy,omitempty"`
	Limit    *int32  `protobuf:"varint,4,opt,name=limit,proto3,oneof" json:"limit,omitempty"`
	Offset   *int32  `protobuf:"varint,5,opt,name=offset,proto3,oneof" json:"offset,omitempty"`
}

func (x *GetMapsRequest) Reset() {
	*x = GetMapsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_maps_rpc_map_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMapsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMapsRequest) ProtoMessage() {}

func (x *GetMapsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_maps_rpc_map_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMapsRequest.ProtoReflect.Descriptor instead.
func (*GetMapsRequest) Descriptor() ([]byte, []int) {
	return file_services_maps_rpc_map_proto_rawDescGZIP(), []int{1}
}

func (x *GetMapsRequest) GetModuleId() int32 {
	if x != nil && x.ModuleId != nil {
		return *x.ModuleId
	}
	return 0
}

func (x *GetMapsRequest) GetTags() []int32 {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *GetMapsRequest) GetOrderBy() string {
	if x != nil && x.OrderBy != nil {
		return *x.OrderBy
	}
	return ""
}

func (x *GetMapsRequest) GetLimit() int32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *GetMapsRequest) GetOffset() int32 {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return 0
}

type GetMapsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Maps       []*Map `protobuf:"bytes,1,rep,name=maps,proto3" json:"maps,omitempty"`
	TotalCount int32  `protobuf:"varint,2,opt,name=totalCount,proto3" json:"totalCount,omitempty"`
}

func (x *GetMapsResponse) Reset() {
	*x = GetMapsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_maps_rpc_map_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMapsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMapsResponse) ProtoMessage() {}

func (x *GetMapsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_maps_rpc_map_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMapsResponse.ProtoReflect.Descriptor instead.
func (*GetMapsResponse) Descriptor() ([]byte, []int) {
	return file_services_maps_rpc_map_proto_rawDescGZIP(), []int{2}
}

func (x *GetMapsResponse) GetMaps() []*Map {
	if x != nil {
		return x.Maps
	}
	return nil
}

func (x *GetMapsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type CreateMapRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModuleId         int32   `protobuf:"varint,1,opt,name=moduleId,proto3" json:"moduleId,omitempty"`
	Title            string  `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Type             *string `protobuf:"bytes,3,opt,name=type,proto3,oneof" json:"type,omitempty"`
	Description      *string `protobuf:"bytes,4,opt,name=description,proto3,oneof" json:"description,omitempty"`
	ThumbnailImageId *int32  `protobuf:"varint,5,opt,name=thumbnailImageId,proto3,oneof" json:"thumbnailImageId,omitempty"`
	IsPrivate        *bool   `protobuf:"varint,6,opt,name=isPrivate,proto3,oneof" json:"isPrivate,omitempty"`
	LayerImageId     int32   `protobuf:"varint,7,opt,name=layerImageId,proto3" json:"layerImageId,omitempty"`
}

func (x *CreateMapRequest) Reset() {
	*x = CreateMapRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_maps_rpc_map_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMapRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMapRequest) ProtoMessage() {}

func (x *CreateMapRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_maps_rpc_map_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMapRequest.ProtoReflect.Descriptor instead.
func (*CreateMapRequest) Descriptor() ([]byte, []int) {
	return file_services_maps_rpc_map_proto_rawDescGZIP(), []int{3}
}

func (x *CreateMapRequest) GetModuleId() int32 {
	if x != nil {
		return x.ModuleId
	}
	return 0
}

func (x *CreateMapRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateMapRequest) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *CreateMapRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *CreateMapRequest) GetThumbnailImageId() int32 {
	if x != nil && x.ThumbnailImageId != nil {
		return *x.ThumbnailImageId
	}
	return 0
}

func (x *CreateMapRequest) GetIsPrivate() bool {
	if x != nil && x.IsPrivate != nil {
		return *x.IsPrivate
	}
	return false
}

func (x *CreateMapRequest) GetLayerImageId() int32 {
	if x != nil {
		return x.LayerImageId
	}
	return 0
}

type CreateMapResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Map   *Map          `protobuf:"bytes,1,opt,name=map,proto3" json:"map,omitempty"`
	Layer *ViewMapLayer `protobuf:"bytes,2,opt,name=layer,proto3" json:"layer,omitempty"`
}

func (x *CreateMapResponse) Reset() {
	*x = CreateMapResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_maps_rpc_map_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMapResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMapResponse) ProtoMessage() {}

func (x *CreateMapResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_maps_rpc_map_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMapResponse.ProtoReflect.Descriptor instead.
func (*CreateMapResponse) Descriptor() ([]byte, []int) {
	return file_services_maps_rpc_map_proto_rawDescGZIP(), []int{4}
}

func (x *CreateMapResponse) GetMap() *Map {
	if x != nil {
		return x.Map
	}
	return nil
}

func (x *CreateMapResponse) GetLayer() *ViewMapLayer {
	if x != nil {
		return x.Layer
	}
	return nil
}

type DeleteMapRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MapId int32 `protobuf:"varint,1,opt,name=mapId,proto3" json:"mapId,omitempty"`
}

func (x *DeleteMapRequest) Reset() {
	*x = DeleteMapRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_maps_rpc_map_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMapRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMapRequest) ProtoMessage() {}

func (x *DeleteMapRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_maps_rpc_map_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMapRequest.ProtoReflect.Descriptor instead.
func (*DeleteMapRequest) Descriptor() ([]byte, []int) {
	return file_services_maps_rpc_map_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteMapRequest) GetMapId() int32 {
	if x != nil {
		return x.MapId
	}
	return 0
}

type UpdateMapRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MapId            int32   `protobuf:"varint,1,opt,name=mapId,proto3" json:"mapId,omitempty"`
	Title            *string `protobuf:"bytes,2,opt,name=title,proto3,oneof" json:"title,omitempty"`
	Type             *string `protobuf:"bytes,3,opt,name=type,proto3,oneof" json:"type,omitempty"`
	Description      *string `protobuf:"bytes,4,opt,name=description,proto3,oneof" json:"description,omitempty"`
	ThumbnailImageId *int32  `protobuf:"varint,5,opt,name=thumbnailImageId,proto3,oneof" json:"thumbnailImageId,omitempty"`
	IsPrivate        *bool   `protobuf:"varint,6,opt,name=isPrivate,proto3,oneof" json:"isPrivate,omitempty"`
}

func (x *UpdateMapRequest) Reset() {
	*x = UpdateMapRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_maps_rpc_map_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMapRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMapRequest) ProtoMessage() {}

func (x *UpdateMapRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_maps_rpc_map_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMapRequest.ProtoReflect.Descriptor instead.
func (*UpdateMapRequest) Descriptor() ([]byte, []int) {
	return file_services_maps_rpc_map_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateMapRequest) GetMapId() int32 {
	if x != nil {
		return x.MapId
	}
	return 0
}

func (x *UpdateMapRequest) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *UpdateMapRequest) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *UpdateMapRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *UpdateMapRequest) GetThumbnailImageId() int32 {
	if x != nil && x.ThumbnailImageId != nil {
		return *x.ThumbnailImageId
	}
	return 0
}

func (x *UpdateMapRequest) GetIsPrivate() bool {
	if x != nil && x.IsPrivate != nil {
		return *x.IsPrivate
	}
	return false
}

type GetMapLayersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MapId int32 `protobuf:"varint,1,opt,name=mapId,proto3" json:"mapId,omitempty"`
}

func (x *GetMapLayersRequest) Reset() {
	*x = GetMapLayersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_maps_rpc_map_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMapLayersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMapLayersRequest) ProtoMessage() {}

func (x *GetMapLayersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_maps_rpc_map_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMapLayersRequest.ProtoReflect.Descriptor instead.
func (*GetMapLayersRequest) Descriptor() ([]byte, []int) {
	return file_services_maps_rpc_map_proto_rawDescGZIP(), []int{7}
}

func (x *GetMapLayersRequest) GetMapId() int32 {
	if x != nil {
		return x.MapId
	}
	return 0
}

type GetMapLayersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Layers []*ViewMapLayer `protobuf:"bytes,1,rep,name=layers,proto3" json:"layers,omitempty"`
}

func (x *GetMapLayersResponse) Reset() {
	*x = GetMapLayersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_maps_rpc_map_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMapLayersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMapLayersResponse) ProtoMessage() {}

func (x *GetMapLayersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_maps_rpc_map_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMapLayersResponse.ProtoReflect.Descriptor instead.
func (*GetMapLayersResponse) Descriptor() ([]byte, []int) {
	return file_services_maps_rpc_map_proto_rawDescGZIP(), []int{8}
}

func (x *GetMapLayersResponse) GetLayers() []*ViewMapLayer {
	if x != nil {
		return x.Layers
	}
	return nil
}

type CreateMapLayerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MapId    int32  `protobuf:"varint,1,opt,name=mapId,proto3" json:"mapId,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ImageId  int32  `protobuf:"varint,3,opt,name=imageId,proto3" json:"imageId,omitempty"`
	Enabled  bool   `protobuf:"varint,4,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Position *int32 `protobuf:"varint,5,opt,name=position,proto3,oneof" json:"position,omitempty"`
}

func (x *CreateMapLayerRequest) Reset() {
	*x = CreateMapLayerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_maps_rpc_map_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMapLayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMapLayerRequest) ProtoMessage() {}

func (x *CreateMapLayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_maps_rpc_map_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMapLayerRequest.ProtoReflect.Descriptor instead.
func (*CreateMapLayerRequest) Descriptor() ([]byte, []int) {
	return file_services_maps_rpc_map_proto_rawDescGZIP(), []int{9}
}

func (x *CreateMapLayerRequest) GetMapId() int32 {
	if x != nil {
		return x.MapId
	}
	return 0
}

func (x *CreateMapLayerRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateMapLayerRequest) GetImageId() int32 {
	if x != nil {
		return x.ImageId
	}
	return 0
}

func (x *CreateMapLayerRequest) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *CreateMapLayerRequest) GetPosition() int32 {
	if x != nil && x.Position != nil {
		return *x.Position
	}
	return 0
}

type DeleteMapLayerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MapId   int32 `protobuf:"varint,1,opt,name=mapId,proto3" json:"mapId,omitempty"`
	LayerId int32 `protobuf:"varint,2,opt,name=layerId,proto3" json:"layerId,omitempty"`
}

func (x *DeleteMapLayerRequest) Reset() {
	*x = DeleteMapLayerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_maps_rpc_map_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMapLayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMapLayerRequest) ProtoMessage() {}

func (x *DeleteMapLayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_maps_rpc_map_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMapLayerRequest.ProtoReflect.Descriptor instead.
func (*DeleteMapLayerRequest) Descriptor() ([]byte, []int) {
	return file_services_maps_rpc_map_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteMapLayerRequest) GetMapId() int32 {
	if x != nil {
		return x.MapId
	}
	return 0
}

func (x *DeleteMapLayerRequest) GetLayerId() int32 {
	if x != nil {
		return x.LayerId
	}
	return 0
}

type UpdateMapLayerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MapId    int32   `protobuf:"varint,1,opt,name=mapId,proto3" json:"mapId,omitempty"`
	LayerId  int32   `protobuf:"varint,2,opt,name=layerId,proto3" json:"layerId,omitempty"`
	Name     *string `protobuf:"bytes,3,opt,name=name,proto3,oneof" json:"name,omitempty"`
	ImageId  *int32  `protobuf:"varint,4,opt,name=imageId,proto3,oneof" json:"imageId,omitempty"`
	Enabled  *bool   `protobuf:"varint,5,opt,name=enabled,proto3,oneof" json:"enabled,omitempty"`
	Position *int32  `protobuf:"varint,6,opt,name=position,proto3,oneof" json:"position,omitempty"`
}

func (x *UpdateMapLayerRequest) Reset() {
	*x = UpdateMapLayerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_maps_rpc_map_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMapLayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMapLayerRequest) ProtoMessage() {}

func (x *UpdateMapLayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_maps_rpc_map_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMapLayerRequest.ProtoReflect.Descriptor instead.
func (*UpdateMapLayerRequest) Descriptor() ([]byte, []int) {
	return file_services_maps_rpc_map_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateMapLayerRequest) GetMapId() int32 {
	if x != nil {
		return x.MapId
	}
	return 0
}

func (x *UpdateMapLayerRequest) GetLayerId() int32 {
	if x != nil {
		return x.LayerId
	}
	return 0
}

func (x *UpdateMapLayerRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateMapLayerRequest) GetImageId() int32 {
	if x != nil && x.ImageId != nil {
		return *x.ImageId
	}
	return 0
}

func (x *UpdateMapLayerRequest) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

func (x *UpdateMapLayerRequest) GetPosition() int32 {
	if x != nil && x.Position != nil {
		return *x.Position
	}
	return 0
}

type GetModuleMapPinTypesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModuleId int32 `protobuf:"varint,1,opt,name=moduleId,proto3" json:"moduleId,omitempty"`
}

func (x *GetModuleMapPinTypesRequest) Reset() {
	*x = GetModuleMapPinTypesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_maps_rpc_map_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetModuleMapPinTypesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetModuleMapPinTypesRequest) ProtoMessage() {}

func (x *GetModuleMapPinTypesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_maps_rpc_map_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetModuleMapPinTypesRequest.ProtoReflect.Descriptor instead.
func (*GetModuleMapPinTypesRequest) Descriptor() ([]byte, []int) {
	return file_services_maps_rpc_map_proto_rawDescGZIP(), []int{12}
}

func (x *GetModuleMapPinTypesRequest) GetModuleId() int32 {
	if x != nil {
		return x.ModuleId
	}
	return 0
}

type GetModuleMapPinTypesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PinTypes      []*MapPinType      `protobuf:"bytes,1,rep,name=pinTypes,proto3" json:"pinTypes,omitempty"`
	PinTypeGroups []*MapPinTypeGroup `protobuf:"bytes,2,rep,name=pinTypeGroups,proto3" json:"pinTypeGroups,omitempty"`
}

func (x *GetModuleMapPinTypesResponse) Reset() {
	*x = GetModuleMapPinTypesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_maps_rpc_map_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetModuleMapPinTypesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetModuleMapPinTypesResponse) ProtoMessage() {}

func (x *GetModuleMapPinTypesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_maps_rpc_map_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetModuleMapPinTypesResponse.ProtoReflect.Descriptor instead.
func (*GetModuleMapPinTypesResponse) Descriptor() ([]byte, []int) {
	return file_services_maps_rpc_map_proto_rawDescGZIP(), []int{13}
}

func (x *GetModuleMapPinTypesResponse) GetPinTypes() []*MapPinType {
	if x != nil {
		return x.PinTypes
	}
	return nil
}

func (x *GetModuleMapPinTypesResponse) GetPinTypeGroups() []*MapPinTypeGroup {
	if x != nil {
		return x.PinTypeGroups
	}
	return nil
}

type CreateMapPinTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModuleId          int32    `protobuf:"varint,1,opt,name=moduleId,proto3" json:"moduleId,omitempty"`
	MapPinTypeGroupId int32    `protobuf:"varint,2,opt,name=mapPinTypeGroupId,proto3" json:"mapPinTypeGroupId,omitempty"`
	Shape             PinShape `protobuf:"varint,3,opt,name=shape,proto3,enum=pb.PinShape" json:"shape,omitempty"`
	BackgroundColor   string   `protobuf:"bytes,4,opt,name=backgroundColor,proto3" json:"backgroundColor,omitempty"`
	BorderColor       string   `protobuf:"bytes,5,opt,name=borderColor,proto3" json:"borderColor,omitempty"`
	IconColor         string   `protobuf:"bytes,6,opt,name=iconColor,proto3" json:"iconColor,omitempty"`
	Icon              string   `protobuf:"bytes,7,opt,name=icon,proto3" json:"icon,omitempty"`
	IconSize          int32    `protobuf:"varint,8,opt,name=iconSize,proto3" json:"iconSize,omitempty"`
	Width             int32    `protobuf:"varint,9,opt,name=width,proto3" json:"width,omitempty"`
}

func (x *CreateMapPinTypeRequest) Reset() {
	*x = CreateMapPinTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_maps_rpc_map_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMapPinTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMapPinTypeRequest) ProtoMessage() {}

func (x *CreateMapPinTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_maps_rpc_map_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMapPinTypeRequest.ProtoReflect.Descriptor instead.
func (*CreateMapPinTypeRequest) Descriptor() ([]byte, []int) {
	return file_services_maps_rpc_map_proto_rawDescGZIP(), []int{14}
}

func (x *CreateMapPinTypeRequest) GetModuleId() int32 {
	if x != nil {
		return x.ModuleId
	}
	return 0
}

func (x *CreateMapPinTypeRequest) GetMapPinTypeGroupId() int32 {
	if x != nil {
		return x.MapPinTypeGroupId
	}
	return 0
}

func (x *CreateMapPinTypeRequest) GetShape() PinShape {
	if x != nil {
		return x.Shape
	}
	return PinShape_SQUARE
}

func (x *CreateMapPinTypeRequest) GetBackgroundColor() string {
	if x != nil {
		return x.BackgroundColor
	}
	return ""
}

func (x *CreateMapPinTypeRequest) GetBorderColor() string {
	if x != nil {
		return x.BorderColor
	}
	return ""
}

func (x *CreateMapPinTypeRequest) GetIconColor() string {
	if x != nil {
		return x.IconColor
	}
	return ""
}

func (x *CreateMapPinTypeRequest) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *CreateMapPinTypeRequest) GetIconSize() int32 {
	if x != nil {
		return x.IconSize
	}
	return 0
}

func (x *CreateMapPinTypeRequest) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

type DeleteMapPinTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MapId     int32 `protobuf:"varint,1,opt,name=mapId,proto3" json:"mapId,omitempty"`
	PinTypeId int32 `protobuf:"varint,2,opt,name=pinTypeId,proto3" json:"pinTypeId,omitempty"`
}

func (x *DeleteMapPinTypeRequest) Reset() {
	*x = DeleteMapPinTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_maps_rpc_map_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMapPinTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMapPinTypeRequest) ProtoMessage() {}

func (x *DeleteMapPinTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_maps_rpc_map_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMapPinTypeRequest.ProtoReflect.Descriptor instead.
func (*DeleteMapPinTypeRequest) Descriptor() ([]byte, []int) {
	return file_services_maps_rpc_map_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteMapPinTypeRequest) GetMapId() int32 {
	if x != nil {
		return x.MapId
	}
	return 0
}

func (x *DeleteMapPinTypeRequest) GetPinTypeId() int32 {
	if x != nil {
		return x.PinTypeId
	}
	return 0
}

type UpdateMapPinTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MapId           int32     `protobuf:"varint,1,opt,name=mapId,proto3" json:"mapId,omitempty"`
	PinTypeId       int32     `protobuf:"varint,2,opt,name=pinTypeId,proto3" json:"pinTypeId,omitempty"`
	Shape           *PinShape `protobuf:"varint,3,opt,name=shape,proto3,enum=pb.PinShape,oneof" json:"shape,omitempty"`
	BackgroundColor *string   `protobuf:"bytes,4,opt,name=backgroundColor,proto3,oneof" json:"backgroundColor,omitempty"`
	BorderColor     *string   `protobuf:"bytes,5,opt,name=borderColor,proto3,oneof" json:"borderColor,omitempty"`
	IconColor       *string   `protobuf:"bytes,6,opt,name=iconColor,proto3,oneof" json:"iconColor,omitempty"`
	Icon            *string   `protobuf:"bytes,7,opt,name=icon,proto3,oneof" json:"icon,omitempty"`
	IconSize        *int32    `protobuf:"varint,8,opt,name=iconSize,proto3,oneof" json:"iconSize,omitempty"`
	Width           *int32    `protobuf:"varint,9,opt,name=width,proto3,oneof" json:"width,omitempty"`
	IsDefault       *bool     `protobuf:"varint,10,opt,name=isDefault,proto3,oneof" json:"isDefault,omitempty"`
}

func (x *UpdateMapPinTypeRequest) Reset() {
	*x = UpdateMapPinTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_maps_rpc_map_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMapPinTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMapPinTypeRequest) ProtoMessage() {}

func (x *UpdateMapPinTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_maps_rpc_map_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMapPinTypeRequest.ProtoReflect.Descriptor instead.
func (*UpdateMapPinTypeRequest) Descriptor() ([]byte, []int) {
	return file_services_maps_rpc_map_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateMapPinTypeRequest) GetMapId() int32 {
	if x != nil {
		return x.MapId
	}
	return 0
}

func (x *UpdateMapPinTypeRequest) GetPinTypeId() int32 {
	if x != nil {
		return x.PinTypeId
	}
	return 0
}

func (x *UpdateMapPinTypeRequest) GetShape() PinShape {
	if x != nil && x.Shape != nil {
		return *x.Shape
	}
	return PinShape_SQUARE
}

func (x *UpdateMapPinTypeRequest) GetBackgroundColor() string {
	if x != nil && x.BackgroundColor != nil {
		return *x.BackgroundColor
	}
	return ""
}

func (x *UpdateMapPinTypeRequest) GetBorderColor() string {
	if x != nil && x.BorderColor != nil {
		return *x.BorderColor
	}
	return ""
}

func (x *UpdateMapPinTypeRequest) GetIconColor() string {
	if x != nil && x.IconColor != nil {
		return *x.IconColor
	}
	return ""
}

func (x *UpdateMapPinTypeRequest) GetIcon() string {
	if x != nil && x.Icon != nil {
		return *x.Icon
	}
	return ""
}

func (x *UpdateMapPinTypeRequest) GetIconSize() int32 {
	if x != nil && x.IconSize != nil {
		return *x.IconSize
	}
	return 0
}

func (x *UpdateMapPinTypeRequest) GetWidth() int32 {
	if x != nil && x.Width != nil {
		return *x.Width
	}
	return 0
}

func (x *UpdateMapPinTypeRequest) GetIsDefault() bool {
	if x != nil && x.IsDefault != nil {
		return *x.IsDefault
	}
	return false
}

type UpdateMapPinTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PinType *MapPinType `protobuf:"bytes,1,opt,name=pinType,proto3" json:"pinType,omitempty"`
}

func (x *UpdateMapPinTypeResponse) Reset() {
	*x = UpdateMapPinTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_maps_rpc_map_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMapPinTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMapPinTypeResponse) ProtoMessage() {}

func (x *UpdateMapPinTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_maps_rpc_map_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMapPinTypeResponse.ProtoReflect.Descriptor instead.
func (*UpdateMapPinTypeResponse) Descriptor() ([]byte, []int) {
	return file_services_maps_rpc_map_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateMapPinTypeResponse) GetPinType() *MapPinType {
	if x != nil {
		return x.PinType
	}
	return nil
}

type CreateMapPinTypeGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModuleId int32  `protobuf:"varint,1,opt,name=moduleId,proto3" json:"moduleId,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CreateMapPinTypeGroupRequest) Reset() {
	*x = CreateMapPinTypeGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_maps_rpc_map_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMapPinTypeGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMapPinTypeGroupRequest) ProtoMessage() {}

func (x *CreateMapPinTypeGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_maps_rpc_map_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMapPinTypeGroupRequest.ProtoReflect.Descriptor instead.
func (*CreateMapPinTypeGroupRequest) Descriptor() ([]byte, []int) {
	return file_services_maps_rpc_map_proto_rawDescGZIP(), []int{18}
}

func (x *CreateMapPinTypeGroupRequest) GetModuleId() int32 {
	if x != nil {
		return x.ModuleId
	}
	return 0
}

func (x *CreateMapPinTypeGroupRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UpdateMapPinTypeGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModuleId          int32  `protobuf:"varint,1,opt,name=moduleId,proto3" json:"moduleId,omitempty"`
	MapPinTypeGroupId int32  `protobuf:"varint,2,opt,name=mapPinTypeGroupId,proto3" json:"mapPinTypeGroupId,omitempty"`
	Name              string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *UpdateMapPinTypeGroupRequest) Reset() {
	*x = UpdateMapPinTypeGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_maps_rpc_map_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMapPinTypeGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMapPinTypeGroupRequest) ProtoMessage() {}

func (x *UpdateMapPinTypeGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_maps_rpc_map_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMapPinTypeGroupRequest.ProtoReflect.Descriptor instead.
func (*UpdateMapPinTypeGroupRequest) Descriptor() ([]byte, []int) {
	return file_services_maps_rpc_map_proto_rawDescGZIP(), []int{19}
}

func (x *UpdateMapPinTypeGroupRequest) GetModuleId() int32 {
	if x != nil {
		return x.ModuleId
	}
	return 0
}

func (x *UpdateMapPinTypeGroupRequest) GetMapPinTypeGroupId() int32 {
	if x != nil {
		return x.MapPinTypeGroupId
	}
	return 0
}

func (x *UpdateMapPinTypeGroupRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DeleteMapPinTypeGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModuleId          int32 `protobuf:"varint,1,opt,name=moduleId,proto3" json:"moduleId,omitempty"`
	MapPinTypeGroupId int32 `protobuf:"varint,2,opt,name=mapPinTypeGroupId,proto3" json:"mapPinTypeGroupId,omitempty"`
}

func (x *DeleteMapPinTypeGroupRequest) Reset() {
	*x = DeleteMapPinTypeGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_maps_rpc_map_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMapPinTypeGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMapPinTypeGroupRequest) ProtoMessage() {}

func (x *DeleteMapPinTypeGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_maps_rpc_map_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMapPinTypeGroupRequest.ProtoReflect.Descriptor instead.
func (*DeleteMapPinTypeGroupRequest) Descriptor() ([]byte, []int) {
	return file_services_maps_rpc_map_proto_rawDescGZIP(), []int{20}
}

func (x *DeleteMapPinTypeGroupRequest) GetModuleId() int32 {
	if x != nil {
		return x.ModuleId
	}
	return 0
}

func (x *DeleteMapPinTypeGroupRequest) GetMapPinTypeGroupId() int32 {
	if x != nil {
		return x.MapPinTypeGroupId
	}
	return 0
}

type GetMapPinsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MapId int32 `protobuf:"varint,1,opt,name=mapId,proto3" json:"mapId,omitempty"`
}

func (x *GetMapPinsRequest) Reset() {
	*x = GetMapPinsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_maps_rpc_map_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMapPinsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMapPinsRequest) ProtoMessage() {}

func (x *GetMapPinsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_maps_rpc_map_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMapPinsRequest.ProtoReflect.Descriptor instead.
func (*GetMapPinsRequest) Descriptor() ([]byte, []int) {
	return file_services_maps_rpc_map_proto_rawDescGZIP(), []int{21}
}

func (x *GetMapPinsRequest) GetMapId() int32 {
	if x != nil {
		return x.MapId
	}
	return 0
}

type GetMapPinsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pins []*ViewMapPin `protobuf:"bytes,1,rep,name=pins,proto3" json:"pins,omitempty"`
}

func (x *GetMapPinsResponse) Reset() {
	*x = GetMapPinsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_maps_rpc_map_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMapPinsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMapPinsResponse) ProtoMessage() {}

func (x *GetMapPinsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_services_maps_rpc_map_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMapPinsResponse.ProtoReflect.Descriptor instead.
func (*GetMapPinsResponse) Descriptor() ([]byte, []int) {
	return file_services_maps_rpc_map_proto_rawDescGZIP(), []int{22}
}

func (x *GetMapPinsResponse) GetPins() []*ViewMapPin {
	if x != nil {
		return x.Pins
	}
	return nil
}

type CreateMapPinRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MapId        int32  `protobuf:"varint,1,opt,name=mapId,proto3" json:"mapId,omitempty"`
	MapPinTypeId *int32 `protobuf:"varint,2,opt,name=mapPinTypeId,proto3,oneof" json:"mapPinTypeId,omitempty"`
	Name         string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	LocationId   *int32 `protobuf:"varint,4,opt,name=locationId,proto3,oneof" json:"locationId,omitempty"`
	MapLayerId   *int32 `protobuf:"varint,5,opt,name=mapLayerId,proto3,oneof" json:"mapLayerId,omitempty"`
	X            int32  `protobuf:"varint,6,opt,name=x,proto3" json:"x,omitempty"`
	Y            int32  `protobuf:"varint,7,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *CreateMapPinRequest) Reset() {
	*x = CreateMapPinRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_maps_rpc_map_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMapPinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMapPinRequest) ProtoMessage() {}

func (x *CreateMapPinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_maps_rpc_map_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMapPinRequest.ProtoReflect.Descriptor instead.
func (*CreateMapPinRequest) Descriptor() ([]byte, []int) {
	return file_services_maps_rpc_map_proto_rawDescGZIP(), []int{23}
}

func (x *CreateMapPinRequest) GetMapId() int32 {
	if x != nil {
		return x.MapId
	}
	return 0
}

func (x *CreateMapPinRequest) GetMapPinTypeId() int32 {
	if x != nil && x.MapPinTypeId != nil {
		return *x.MapPinTypeId
	}
	return 0
}

func (x *CreateMapPinRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateMapPinRequest) GetLocationId() int32 {
	if x != nil && x.LocationId != nil {
		return *x.LocationId
	}
	return 0
}

func (x *CreateMapPinRequest) GetMapLayerId() int32 {
	if x != nil && x.MapLayerId != nil {
		return *x.MapLayerId
	}
	return 0
}

func (x *CreateMapPinRequest) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *CreateMapPinRequest) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

type DeleteMapPinRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MapId int32 `protobuf:"varint,1,opt,name=mapId,proto3" json:"mapId,omitempty"`
	PinId int32 `protobuf:"varint,2,opt,name=pinId,proto3" json:"pinId,omitempty"`
}

func (x *DeleteMapPinRequest) Reset() {
	*x = DeleteMapPinRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_maps_rpc_map_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMapPinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMapPinRequest) ProtoMessage() {}

func (x *DeleteMapPinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_maps_rpc_map_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMapPinRequest.ProtoReflect.Descriptor instead.
func (*DeleteMapPinRequest) Descriptor() ([]byte, []int) {
	return file_services_maps_rpc_map_proto_rawDescGZIP(), []int{24}
}

func (x *DeleteMapPinRequest) GetMapId() int32 {
	if x != nil {
		return x.MapId
	}
	return 0
}

func (x *DeleteMapPinRequest) GetPinId() int32 {
	if x != nil {
		return x.PinId
	}
	return 0
}

type UpdateMapPinRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MapId        int32   `protobuf:"varint,1,opt,name=mapId,proto3" json:"mapId,omitempty"`
	PinId        int32   `protobuf:"varint,2,opt,name=pinId,proto3" json:"pinId,omitempty"`
	MapPinTypeId *int32  `protobuf:"varint,3,opt,name=mapPinTypeId,proto3,oneof" json:"mapPinTypeId,omitempty"`
	Name         *string `protobuf:"bytes,4,opt,name=name,proto3,oneof" json:"name,omitempty"`
	LocationId   *int32  `protobuf:"varint,5,opt,name=locationId,proto3,oneof" json:"locationId,omitempty"`
	MapLayerId   *int32  `protobuf:"varint,6,opt,name=mapLayerId,proto3,oneof" json:"mapLayerId,omitempty"`
	X            *int32  `protobuf:"varint,7,opt,name=x,proto3,oneof" json:"x,omitempty"`
	Y            *int32  `protobuf:"varint,8,opt,name=y,proto3,oneof" json:"y,omitempty"`
}

func (x *UpdateMapPinRequest) Reset() {
	*x = UpdateMapPinRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_maps_rpc_map_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMapPinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMapPinRequest) ProtoMessage() {}

func (x *UpdateMapPinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_maps_rpc_map_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMapPinRequest.ProtoReflect.Descriptor instead.
func (*UpdateMapPinRequest) Descriptor() ([]byte, []int) {
	return file_services_maps_rpc_map_proto_rawDescGZIP(), []int{25}
}

func (x *UpdateMapPinRequest) GetMapId() int32 {
	if x != nil {
		return x.MapId
	}
	return 0
}

func (x *UpdateMapPinRequest) GetPinId() int32 {
	if x != nil {
		return x.PinId
	}
	return 0
}

func (x *UpdateMapPinRequest) GetMapPinTypeId() int32 {
	if x != nil && x.MapPinTypeId != nil {
		return *x.MapPinTypeId
	}
	return 0
}

func (x *UpdateMapPinRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateMapPinRequest) GetLocationId() int32 {
	if x != nil && x.LocationId != nil {
		return *x.LocationId
	}
	return 0
}

func (x *UpdateMapPinRequest) GetMapLayerId() int32 {
	if x != nil && x.MapLayerId != nil {
		return *x.MapLayerId
	}
	return 0
}

func (x *UpdateMapPinRequest) GetX() int32 {
	if x != nil && x.X != nil {
		return *x.X
	}
	return 0
}

func (x *UpdateMapPinRequest) GetY() int32 {
	if x != nil && x.Y != nil {
		return *x.Y
	}
	return 0
}

var File_services_maps_rpc_map_proto protoreflect.FileDescriptor

var file_services_maps_rpc_map_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x6d, 0x61, 0x70, 0x73, 0x2f,
	0x72, 0x70, 0x63, 0x5f, 0x6d, 0x61, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70,
	0x62, 0x1a, 0x17, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x6d, 0x61, 0x70, 0x73,
	0x2f, 0x6d, 0x61, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x29, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x4d, 0x61, 0x70, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x6d, 0x61, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x6d, 0x61, 0x70, 0x49, 0x64, 0x22, 0xca, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x70,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x08, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1d, 0x0a,
	0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01,
	0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x48, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49,
	0x64, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x42, 0x08, 0x0a,
	0x06, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x22, 0x4e, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x70, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x04, 0x6d, 0x61, 0x70, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x61, 0x70, 0x52, 0x04, 0x6d, 0x61,
	0x70, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0xb8, 0x02, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x17, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x10, 0x74, 0x68, 0x75,
	0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x10, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x69, 0x73,
	0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x48, 0x03, 0x52,
	0x09, 0x69, 0x73, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a,
	0x0c, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x49,
	0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x74,
	0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x69, 0x73, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x22, 0x56, 0x0a,
	0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x19, 0x0a, 0x03, 0x6d, 0x61, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x07, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x61, 0x70, 0x52, 0x03, 0x6d, 0x61, 0x70, 0x12, 0x26, 0x0a,
	0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70,
	0x62, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x4d, 0x61, 0x70, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x05,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x22, 0x28, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d,
	0x61, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61, 0x70,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x61, 0x70, 0x49, 0x64, 0x22,
	0x9d, 0x02, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x61, 0x70, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x25,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x10, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61,
	0x69, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x03, 0x52, 0x10, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x69, 0x73, 0x50, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x48, 0x04, 0x52, 0x09, 0x69, 0x73, 0x50,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x0e, 0x0a, 0x0c,
	0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x13, 0x0a, 0x11,
	0x5f, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x49,
	0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x69, 0x73, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x22,
	0x2b, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x70, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61, 0x70, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x61, 0x70, 0x49, 0x64, 0x22, 0x40, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x4d, 0x61, 0x70, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x4d, 0x61,
	0x70, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x06, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x22, 0xa3,
	0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x70, 0x4c, 0x61, 0x79, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61, 0x70, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x61, 0x70, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x47, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61,
	0x70, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x6d, 0x61, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x61,
	0x70, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x22, 0xed, 0x01,
	0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x70, 0x4c, 0x61, 0x79, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61, 0x70, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x61, 0x70, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x1d, 0x0a, 0x07, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x48, 0x01, 0x52, 0x07, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x1d, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x48, 0x02, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1f,
	0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x03, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42,
	0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x49, 0x64, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x39, 0x0a,
	0x1b, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x61, 0x70, 0x50, 0x69, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x85, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74,
	0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x4d, 0x61, 0x70, 0x50, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x08, 0x70, 0x69, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62,
	0x2e, 0x4d, 0x61, 0x70, 0x50, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x70, 0x69, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x0d, 0x70, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70,
	0x62, 0x2e, 0x4d, 0x61, 0x70, 0x50, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x0d, 0x70, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x22, 0xb7, 0x02, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x70, 0x50, 0x69,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x6d, 0x61, 0x70, 0x50,
	0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x11, 0x6d, 0x61, 0x70, 0x50, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x05, 0x73, 0x68, 0x61, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x69, 0x6e, 0x53, 0x68,
	0x61, 0x70, 0x65, 0x52, 0x05, 0x73, 0x68, 0x61, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x62, 0x61,
	0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f,
	0x6c, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x63, 0x6f, 0x6e, 0x43, 0x6f,
	0x6c, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x63, 0x6f, 0x6e, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x63, 0x6f, 0x6e,
	0x53, 0x69, 0x7a, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x63, 0x6f, 0x6e,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x22, 0x4d, 0x0a, 0x17, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61, 0x70, 0x50, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61, 0x70, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x61, 0x70, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x70, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x22, 0xd1, 0x03, 0x0a, 0x17, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x70, 0x50, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61, 0x70, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x61, 0x70, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x70, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x05, 0x73, 0x68, 0x61,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x69,
	0x6e, 0x53, 0x68, 0x61, 0x70, 0x65, 0x48, 0x00, 0x52, 0x05, 0x73, 0x68, 0x61, 0x70, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x2d, 0x0a, 0x0f, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0f, 0x62,
	0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x88, 0x01,
	0x01, 0x12, 0x25, 0x0a, 0x0b, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0b, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x69, 0x63, 0x6f, 0x6e,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x09, 0x69,
	0x63, 0x6f, 0x6e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x69,
	0x63, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x04, 0x69, 0x63, 0x6f,
	0x6e, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x53, 0x69, 0x7a, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x48, 0x05, 0x52, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x53, 0x69,
	0x7a, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x05, 0x48, 0x06, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x88, 0x01, 0x01,
	0x12, 0x21, 0x0a, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x08, 0x48, 0x07, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x73, 0x68, 0x61, 0x70, 0x65, 0x42, 0x12, 0x0a,
	0x10, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x6f, 0x6c, 0x6f,
	0x72, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6c, 0x6f,
	0x72, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x42,
	0x07, 0x0a, 0x05, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x69, 0x63, 0x6f,
	0x6e, 0x53, 0x69, 0x7a, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x44, 0x0a,
	0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x70, 0x50, 0x69, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x07, 0x70, 0x69, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e,
	0x4d, 0x61, 0x70, 0x50, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x70, 0x69, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x4e, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x70,
	0x50, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x7c, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x70,
	0x50, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12,
	0x2c, 0x0a, 0x11, 0x6d, 0x61, 0x70, 0x50, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x6d, 0x61, 0x70, 0x50,
	0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0x68, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61, 0x70, 0x50, 0x69,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x2c, 0x0a,
	0x11, 0x6d, 0x61, 0x70, 0x50, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x6d, 0x61, 0x70, 0x50, 0x69, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x29, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x4d, 0x61, 0x70, 0x50, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x6d, 0x61, 0x70, 0x49, 0x64, 0x22, 0x38, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x70,
	0x50, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x04,
	0x70, 0x69, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e,
	0x56, 0x69, 0x65, 0x77, 0x4d, 0x61, 0x70, 0x50, 0x69, 0x6e, 0x52, 0x04, 0x70, 0x69, 0x6e, 0x73,
	0x22, 0xfd, 0x01, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x70, 0x50, 0x69,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61, 0x70, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x61, 0x70, 0x49, 0x64, 0x12, 0x27,
	0x0a, 0x0c, 0x6d, 0x61, 0x70, 0x50, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x0c, 0x6d, 0x61, 0x70, 0x50, 0x69, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0a, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x01, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x23, 0x0a, 0x0a, 0x6d, 0x61, 0x70, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x0a, 0x6d, 0x61, 0x70, 0x4c, 0x61, 0x79, 0x65, 0x72,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01,
	0x79, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x6d, 0x61, 0x70, 0x50, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x49, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6d, 0x61, 0x70, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x41, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61, 0x70, 0x50, 0x69, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61, 0x70, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x61, 0x70, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x69,
	0x6e, 0x49, 0x64, 0x22, 0xb7, 0x02, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61,
	0x70, 0x50, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6d,
	0x61, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x61, 0x70, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x70, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0c, 0x6d, 0x61, 0x70, 0x50, 0x69,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52,
	0x0c, 0x6d, 0x61, 0x70, 0x50, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02, 0x52,
	0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x23,
	0x0a, 0x0a, 0x6d, 0x61, 0x70, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x48, 0x03, 0x52, 0x0a, 0x6d, 0x61, 0x70, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x11, 0x0a, 0x01, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x48, 0x04,
	0x52, 0x01, 0x78, 0x88, 0x01, 0x01, 0x12, 0x11, 0x0a, 0x01, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x48, 0x05, 0x52, 0x01, 0x79, 0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x6d, 0x61,
	0x70, 0x50, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6d, 0x61, 0x70, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x64, 0x42, 0x04, 0x0a, 0x02, 0x5f, 0x78, 0x42, 0x04, 0x0a, 0x02, 0x5f, 0x79, 0x42, 0x2a, 0x5a,
	0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x68, 0x65, 0x2d,
	0x6d, 0x65, 0x64, 0x6f, 0x2f, 0x74, 0x61, 0x6c, 0x65, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x2d, 0x62,
	0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_services_maps_rpc_map_proto_rawDescOnce sync.Once
	file_services_maps_rpc_map_proto_rawDescData = file_services_maps_rpc_map_proto_rawDesc
)

func file_services_maps_rpc_map_proto_rawDescGZIP() []byte {
	file_services_maps_rpc_map_proto_rawDescOnce.Do(func() {
		file_services_maps_rpc_map_proto_rawDescData = protoimpl.X.CompressGZIP(file_services_maps_rpc_map_proto_rawDescData)
	})
	return file_services_maps_rpc_map_proto_rawDescData
}

var file_services_maps_rpc_map_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_services_maps_rpc_map_proto_goTypes = []interface{}{
	(*GetMapByIdRequest)(nil),            // 0: pb.GetMapByIdRequest
	(*GetMapsRequest)(nil),               // 1: pb.GetMapsRequest
	(*GetMapsResponse)(nil),              // 2: pb.GetMapsResponse
	(*CreateMapRequest)(nil),             // 3: pb.CreateMapRequest
	(*CreateMapResponse)(nil),            // 4: pb.CreateMapResponse
	(*DeleteMapRequest)(nil),             // 5: pb.DeleteMapRequest
	(*UpdateMapRequest)(nil),             // 6: pb.UpdateMapRequest
	(*GetMapLayersRequest)(nil),          // 7: pb.GetMapLayersRequest
	(*GetMapLayersResponse)(nil),         // 8: pb.GetMapLayersResponse
	(*CreateMapLayerRequest)(nil),        // 9: pb.CreateMapLayerRequest
	(*DeleteMapLayerRequest)(nil),        // 10: pb.DeleteMapLayerRequest
	(*UpdateMapLayerRequest)(nil),        // 11: pb.UpdateMapLayerRequest
	(*GetModuleMapPinTypesRequest)(nil),  // 12: pb.GetModuleMapPinTypesRequest
	(*GetModuleMapPinTypesResponse)(nil), // 13: pb.GetModuleMapPinTypesResponse
	(*CreateMapPinTypeRequest)(nil),      // 14: pb.CreateMapPinTypeRequest
	(*DeleteMapPinTypeRequest)(nil),      // 15: pb.DeleteMapPinTypeRequest
	(*UpdateMapPinTypeRequest)(nil),      // 16: pb.UpdateMapPinTypeRequest
	(*UpdateMapPinTypeResponse)(nil),     // 17: pb.UpdateMapPinTypeResponse
	(*CreateMapPinTypeGroupRequest)(nil), // 18: pb.CreateMapPinTypeGroupRequest
	(*UpdateMapPinTypeGroupRequest)(nil), // 19: pb.UpdateMapPinTypeGroupRequest
	(*DeleteMapPinTypeGroupRequest)(nil), // 20: pb.DeleteMapPinTypeGroupRequest
	(*GetMapPinsRequest)(nil),            // 21: pb.GetMapPinsRequest
	(*GetMapPinsResponse)(nil),           // 22: pb.GetMapPinsResponse
	(*CreateMapPinRequest)(nil),          // 23: pb.CreateMapPinRequest
	(*DeleteMapPinRequest)(nil),          // 24: pb.DeleteMapPinRequest
	(*UpdateMapPinRequest)(nil),          // 25: pb.UpdateMapPinRequest
	(*Map)(nil),                          // 26: pb.Map
	(*ViewMapLayer)(nil),                 // 27: pb.ViewMapLayer
	(*MapPinType)(nil),                   // 28: pb.MapPinType
	(*MapPinTypeGroup)(nil),              // 29: pb.MapPinTypeGroup
	(PinShape)(0),                        // 30: pb.PinShape
	(*ViewMapPin)(nil),                   // 31: pb.ViewMapPin
}
var file_services_maps_rpc_map_proto_depIdxs = []int32{
	26, // 0: pb.GetMapsResponse.maps:type_name -> pb.Map
	26, // 1: pb.CreateMapResponse.map:type_name -> pb.Map
	27, // 2: pb.CreateMapResponse.layer:type_name -> pb.ViewMapLayer
	27, // 3: pb.GetMapLayersResponse.layers:type_name -> pb.ViewMapLayer
	28, // 4: pb.GetModuleMapPinTypesResponse.pinTypes:type_name -> pb.MapPinType
	29, // 5: pb.GetModuleMapPinTypesResponse.pinTypeGroups:type_name -> pb.MapPinTypeGroup
	30, // 6: pb.CreateMapPinTypeRequest.shape:type_name -> pb.PinShape
	30, // 7: pb.UpdateMapPinTypeRequest.shape:type_name -> pb.PinShape
	28, // 8: pb.UpdateMapPinTypeResponse.pinType:type_name -> pb.MapPinType
	31, // 9: pb.GetMapPinsResponse.pins:type_name -> pb.ViewMapPin
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_services_maps_rpc_map_proto_init() }
func file_services_maps_rpc_map_proto_init() {
	if File_services_maps_rpc_map_proto != nil {
		return
	}
	file_services_maps_map_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_services_maps_rpc_map_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMapByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_maps_rpc_map_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMapsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_maps_rpc_map_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMapsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_maps_rpc_map_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMapRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_maps_rpc_map_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMapResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_maps_rpc_map_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMapRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_maps_rpc_map_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMapRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_maps_rpc_map_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMapLayersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_maps_rpc_map_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMapLayersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_maps_rpc_map_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMapLayerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_maps_rpc_map_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMapLayerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_maps_rpc_map_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMapLayerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_maps_rpc_map_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetModuleMapPinTypesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_maps_rpc_map_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetModuleMapPinTypesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_maps_rpc_map_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMapPinTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_maps_rpc_map_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMapPinTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_maps_rpc_map_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMapPinTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_maps_rpc_map_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMapPinTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_maps_rpc_map_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMapPinTypeGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_maps_rpc_map_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMapPinTypeGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_maps_rpc_map_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMapPinTypeGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_maps_rpc_map_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMapPinsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_maps_rpc_map_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMapPinsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_maps_rpc_map_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMapPinRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_maps_rpc_map_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMapPinRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_maps_rpc_map_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMapPinRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_services_maps_rpc_map_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_services_maps_rpc_map_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_services_maps_rpc_map_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_services_maps_rpc_map_proto_msgTypes[9].OneofWrappers = []interface{}{}
	file_services_maps_rpc_map_proto_msgTypes[11].OneofWrappers = []interface{}{}
	file_services_maps_rpc_map_proto_msgTypes[16].OneofWrappers = []interface{}{}
	file_services_maps_rpc_map_proto_msgTypes[23].OneofWrappers = []interface{}{}
	file_services_maps_rpc_map_proto_msgTypes[25].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_services_maps_rpc_map_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_services_maps_rpc_map_proto_goTypes,
		DependencyIndexes: file_services_maps_rpc_map_proto_depIdxs,
		MessageInfos:      file_services_maps_rpc_map_proto_msgTypes,
	}.Build()
	File_services_maps_rpc_map_proto = out.File
	file_services_maps_rpc_map_proto_rawDesc = nil
	file_services_maps_rpc_map_proto_goTypes = nil
	file_services_maps_rpc_map_proto_depIdxs = nil
}
