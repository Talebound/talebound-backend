{
  "swagger": "2.0",
  "info": {
    "title": "Talebound API",
    "version": "1.0",
    "contact": {
      "name": "Medo",
      "url": "https://github.com/the-medo/talebound-backend",
      "email": "martinmederly@gmail.com"
    }
  },
  "tags": [
    {
      "name": "Chat"
    },
    {
      "name": "Entities"
    },
    {
      "name": "Evaluations"
    },
    {
      "name": "Images"
    },
    {
      "name": "Locations"
    },
    {
      "name": "Maps"
    },
    {
      "name": "Menus"
    },
    {
      "name": "PostTypes"
    },
    {
      "name": "Posts"
    },
    {
      "name": "Tags"
    },
    {
      "name": "Users"
    },
    {
      "name": "Verify"
    },
    {
      "name": "Worlds"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/chat": {
      "get": {
        "summary": "Get list of chat messages",
        "description": "returns list of chat messages",
        "operationId": "Chat_GetChatMessages",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetChatMessagesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Chat"
        ]
      },
      "post": {
        "summary": "Add new chat message",
        "description": "adds new chat message",
        "operationId": "Chat_AddChatMessage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbAddChatMessageResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbAddChatMessageRequest"
            }
          }
        ],
        "tags": [
          "Chat"
        ]
      }
    },
    "/chat/{id}": {
      "delete": {
        "summary": "Delete chat message",
        "description": "removes role from user",
        "operationId": "Chat_DeleteChatMessage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbDeleteChatMessageResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Chat"
        ]
      }
    },
    "/entities/groups": {
      "post": {
        "summary": "Create entity group",
        "description": "creates entity group",
        "operationId": "Entities_CreateEntityGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbEntityGroup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbCreateEntityGroupRequest"
            }
          }
        ],
        "tags": [
          "Entities"
        ]
      }
    },
    "/entities/groups/{entityGroupId}": {
      "delete": {
        "summary": "Delete entity group",
        "description": "deletes an entity group",
        "operationId": "Entities_DeleteEntityGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "entityGroupId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Entities"
        ]
      },
      "patch": {
        "summary": "Update entity group",
        "description": "updates entity group properties",
        "operationId": "Entities_UpdateEntityGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbEntityGroup"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "entityGroupId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "Entities"
        ]
      }
    },
    "/entities/groups/{entityGroupId}/content": {
      "post": {
        "summary": "Create entity group content",
        "description": "creates content for an entity group",
        "operationId": "Entities_CreateEntityGroupContent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbEntityGroupContent"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "entityGroupId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "contentEntityId": {
                  "type": "integer",
                  "format": "int32"
                },
                "contentEntityGroupId": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        ],
        "tags": [
          "Entities"
        ]
      }
    },
    "/entities/groups/{entityGroupId}/content/{contentId}": {
      "delete": {
        "summary": "Delete entity group content",
        "description": "deletes content from an entity group",
        "operationId": "Entities_DeleteEntityGroupContent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "entityGroupId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Entities"
        ]
      },
      "patch": {
        "summary": "Update entity group content",
        "description": "updates content of an entity group",
        "operationId": "Entities_UpdateEntityGroupContent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbEntityGroupContent"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "entityGroupId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "newEntityGroupId": {
                  "type": "integer",
                  "format": "int32"
                },
                "position": {
                  "type": "integer",
                  "format": "int32"
                },
                "contentEntityId": {
                  "type": "integer",
                  "format": "int32"
                },
                "contentEntityGroupId": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        ],
        "tags": [
          "Entities"
        ]
      }
    },
    "/evaluations/id/{id}": {
      "get": {
        "summary": "Get evaluation by id",
        "description": "get evaluation by id",
        "operationId": "Evaluations_GetEvaluationById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetEvaluationByIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Evaluations"
        ]
      }
    },
    "/evaluations/type/{type}": {
      "get": {
        "summary": "Get evaluations by type",
        "description": "get evaluations by type",
        "operationId": "Evaluations_GetEvaluationsByType",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetEvaluationsByTypeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "self",
              "dm"
            ]
          }
        ],
        "tags": [
          "Evaluations"
        ]
      }
    },
    "/images": {
      "get": {
        "summary": "Get images",
        "description": "get images - paginated, filterable by user and image type",
        "operationId": "Images_GetImages",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetImagesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "imageTypeId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Images"
        ]
      },
      "post": {
        "summary": "Upload image",
        "description": "uploads an image file",
        "operationId": "Images_UploadDefaultImage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbImage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbUploadImageRequest"
            }
          }
        ],
        "tags": [
          "Images"
        ]
      }
    },
    "/locations/{locationId}": {
      "patch": {
        "summary": "Update location",
        "description": "updates location properties",
        "operationId": "Locations_UpdateLocation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbViewLocation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "locationId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "postId": {
                  "type": "integer",
                  "format": "int32"
                },
                "thumbnailImageId": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        ],
        "tags": [
          "Locations"
        ]
      }
    },
    "/maps/{mapId}": {
      "patch": {
        "summary": "Update map",
        "description": "updates map properties",
        "operationId": "Maps_UpdateMap",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbViewMap"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "mapId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "width": {
                  "type": "integer",
                  "format": "int32"
                },
                "height": {
                  "type": "integer",
                  "format": "int32"
                },
                "thumbnailImageId": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        ],
        "tags": [
          "Maps"
        ]
      }
    },
    "/maps/{mapId}/layers": {
      "get": {
        "summary": "Get map layers",
        "description": "returns layers of the map",
        "operationId": "Maps_GetMapLayers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetMapLayersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "mapId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Maps"
        ]
      },
      "post": {
        "summary": "Create map layer",
        "description": "creates a new layer for the map",
        "operationId": "Maps_CreateMapLayer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbViewMapLayer"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "mapId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "imageId": {
                  "type": "integer",
                  "format": "int32"
                },
                "isMain": {
                  "type": "boolean"
                },
                "enabled": {
                  "type": "boolean"
                },
                "sublayer": {
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "tags": [
          "Maps"
        ]
      }
    },
    "/maps/{mapId}/layers/{layerId}": {
      "delete": {
        "summary": "Delete map layer",
        "description": "deletes a layer from the map",
        "operationId": "Maps_DeleteMapLayer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "mapId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "layerId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Maps"
        ]
      },
      "patch": {
        "summary": "Update map layer",
        "description": "updates layer properties",
        "operationId": "Maps_UpdateMapLayer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbViewMapLayer"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "mapId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "layerId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "imageId": {
                  "type": "integer",
                  "format": "int32"
                },
                "isMain": {
                  "type": "boolean"
                },
                "enabled": {
                  "type": "boolean"
                },
                "sublayer": {
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "tags": [
          "Maps"
        ]
      }
    },
    "/maps/{mapId}/pin_types": {
      "get": {
        "summary": "Get map pin types",
        "description": "returns pin types of the map",
        "operationId": "Maps_GetMapPinTypes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetMapPinTypesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "mapId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Maps"
        ]
      },
      "post": {
        "summary": "Create map pin type",
        "description": "creates a new pin type for the map",
        "operationId": "Maps_CreateMapPinType",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbMapPinType"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "mapId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "shape": {
                  "$ref": "#/definitions/pbPinShape"
                },
                "backgroundColor": {
                  "type": "string"
                },
                "borderColor": {
                  "type": "string"
                },
                "iconColor": {
                  "type": "string"
                },
                "icon": {
                  "type": "string"
                },
                "iconSize": {
                  "type": "integer",
                  "format": "int32"
                },
                "width": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        ],
        "tags": [
          "Maps"
        ]
      }
    },
    "/maps/{mapId}/pin_types/{pinTypeId}": {
      "delete": {
        "summary": "Delete map pin type",
        "description": "deletes a pin type from the map",
        "operationId": "Maps_DeleteMapPinType",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "mapId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pinTypeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Maps"
        ]
      },
      "patch": {
        "summary": "Update map pin type",
        "description": "updates pin type properties",
        "operationId": "Maps_UpdateMapPinType",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbUpdateMapPinTypeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "mapId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pinTypeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "shape": {
                  "$ref": "#/definitions/pbPinShape"
                },
                "backgroundColor": {
                  "type": "string"
                },
                "borderColor": {
                  "type": "string"
                },
                "iconColor": {
                  "type": "string"
                },
                "icon": {
                  "type": "string"
                },
                "iconSize": {
                  "type": "integer",
                  "format": "int32"
                },
                "width": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        ],
        "tags": [
          "Maps"
        ]
      }
    },
    "/maps/{mapId}/pins": {
      "get": {
        "summary": "Get map pins",
        "description": "returns pins of the map",
        "operationId": "Maps_GetMapPins",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetMapPinsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "mapId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Maps"
        ]
      },
      "post": {
        "summary": "Create map pin",
        "description": "creates a new pin for the map",
        "operationId": "Maps_CreateMapPin",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbViewMapPin"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "mapId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "mapPinTypeId": {
                  "type": "integer",
                  "format": "int32"
                },
                "name": {
                  "type": "string"
                },
                "locationId": {
                  "type": "integer",
                  "format": "int32"
                },
                "mapLayerId": {
                  "type": "integer",
                  "format": "int32"
                },
                "x": {
                  "type": "integer",
                  "format": "int32"
                },
                "y": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        ],
        "tags": [
          "Maps"
        ]
      }
    },
    "/maps/{mapId}/pins/{pinId}": {
      "delete": {
        "summary": "Delete map pin",
        "description": "deletes a pin from the map",
        "operationId": "Maps_DeleteMapPin",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "mapId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pinId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Maps"
        ]
      },
      "patch": {
        "summary": "Update map pin",
        "description": "updates pin properties",
        "operationId": "Maps_UpdateMapPin",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbViewMapPin"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "mapId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pinId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "mapPinTypeId": {
                  "type": "integer",
                  "format": "int32"
                },
                "name": {
                  "type": "string"
                },
                "locationId": {
                  "type": "integer",
                  "format": "int32"
                },
                "mapLayerId": {
                  "type": "integer",
                  "format": "int32"
                },
                "x": {
                  "type": "integer",
                  "format": "int32"
                },
                "y": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        ],
        "tags": [
          "Maps"
        ]
      }
    },
    "/menus/{menuId}": {
      "get": {
        "summary": "Get menu by ID ",
        "description": "gets menu by ID",
        "operationId": "Menus_GetMenu",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbViewMenu"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "menuId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Menus"
        ]
      },
      "patch": {
        "summary": "Update Menu",
        "description": "updates menu (code or image)",
        "operationId": "Menus_UpdateMenu",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbViewMenu"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "menuId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "headerImgId": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        ],
        "tags": [
          "Menus"
        ]
      }
    },
    "/menus/{menuId}/groups/{menuItemId}": {
      "patch": {
        "summary": "Move menu item group up",
        "description": "move menu item group up",
        "operationId": "Menus_UpdateMenuItemMoveGroupUp",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "menuId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "menuItemId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Menus"
        ]
      }
    },
    "/menus/{menuId}/items": {
      "get": {
        "summary": "Get menu items",
        "description": "gets list of menu items",
        "operationId": "Menus_GetMenuItems",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetMenuItemsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "menuId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Menus"
        ]
      },
      "post": {
        "summary": "Create menu item",
        "description": "adds new menu item to the menu",
        "operationId": "Menus_CreateMenuItem",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbMenuItem"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "menuId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "position": {
                  "type": "integer",
                  "format": "int32"
                },
                "isMain": {
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "tags": [
          "Menus"
        ]
      }
    },
    "/menus/{menuId}/items/{menuItemId}": {
      "get": {
        "summary": "Get all entities for menu item",
        "description": "gets list of entities for menu item - posts, maps, locations,...",
        "operationId": "Menus_GetMenuItemContent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetMenuItemContentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "menuId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "menuItemId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Menus"
        ]
      },
      "delete": {
        "summary": "Delete menu item",
        "description": "deletes menu item",
        "operationId": "Menus_DeleteMenuItem",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "menuId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "menuItemId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Menus"
        ]
      },
      "patch": {
        "summary": "Update menu item",
        "description": "updates menu item",
        "operationId": "Menus_UpdateMenuItem",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbMenuItem"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "menuId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "menuItemId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "position": {
                  "type": "integer",
                  "format": "int32"
                },
                "isMain": {
                  "type": "boolean"
                },
                "descriptionPostId": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        ],
        "tags": [
          "Menus"
        ]
      }
    },
    "/menus/{menuId}/items/{menuItemId}/posts": {
      "get": {
        "summary": "Get menu item posts",
        "description": "gets list of menu item posts",
        "operationId": "Menus_GetMenuItemPosts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetMenuItemPostsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "menuId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "menuItemId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Menus"
        ]
      },
      "post": {
        "summary": "Create menu item post",
        "description": "adds new menu item post to the menu item",
        "operationId": "Menus_CreateMenuItemPost",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbMenuItemPost"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "menuId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "menuItemId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "postId": {
                  "type": "integer",
                  "format": "int32"
                },
                "position": {
                  "type": "integer",
                  "format": "int32"
                },
                "isMenuItemDescriptionPost": {
                  "type": "boolean"
                },
                "title": {
                  "type": "string"
                },
                "shortDescription": {
                  "type": "string"
                },
                "imageThumbnailId": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        ],
        "tags": [
          "Menus"
        ]
      }
    },
    "/menus/{menuId}/items/{menuItemId}/posts/{postId}": {
      "delete": {
        "summary": "Delete menu item post",
        "description": "deletes menu item post",
        "operationId": "Menus_DeleteMenuItemPost",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "menuId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "menuItemId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Menus"
        ]
      },
      "patch": {
        "summary": "Update menu item post",
        "description": "updates menu item post",
        "operationId": "Menus_UpdateMenuItemPost",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "menuId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "menuItemId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "newMenuItemId": {
                  "type": "integer",
                  "format": "int32"
                },
                "position": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        ],
        "tags": [
          "Menus"
        ]
      }
    },
    "/menus/{menuId}/posts": {
      "get": {
        "summary": "Get menu item posts by menu id",
        "description": "gets list of menu item posts for menu",
        "operationId": "Menus_GetMenuItemPostsByMenuId",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetMenuItemPostsByMenuIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "menuId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Menus"
        ]
      },
      "patch": {
        "summary": "Update menu posts",
        "description": "change menu item id for multiple posts",
        "operationId": "Menus_UpdateMenuPosts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbUpdateMenuPostsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "menuId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "menuItemId": {
                  "type": "integer",
                  "format": "int32"
                },
                "postIds": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          }
        ],
        "tags": [
          "Menus"
        ]
      }
    },
    "/post_types": {
      "get": {
        "summary": "Get post types",
        "description": "get post types with info (draftable, privatable)",
        "operationId": "PostTypes_GetPostTypes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetPostTypesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "PostTypes"
        ]
      }
    },
    "/posts": {
      "post": {
        "summary": "Create post",
        "description": "create completely new post",
        "operationId": "Posts_CreatePost",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbPost"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbCreatePostRequest"
            }
          }
        ],
        "tags": [
          "Posts"
        ]
      }
    },
    "/posts/{postId}": {
      "get": {
        "summary": "Get post by id",
        "description": "get content of post by its ID",
        "operationId": "Posts_GetPostById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbPost"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Posts"
        ]
      },
      "delete": {
        "summary": "Delete post",
        "description": "deletes post",
        "operationId": "Posts_DeletePost",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbDeletePostResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Posts"
        ]
      },
      "patch": {
        "summary": "Update post",
        "description": "update title or content of the post",
        "operationId": "Posts_UpdatePost",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbPost"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string"
                },
                "content": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "postTypeId": {
                  "type": "integer",
                  "format": "int32"
                },
                "isDraft": {
                  "type": "boolean"
                },
                "isPrivate": {
                  "type": "boolean"
                },
                "imageThumbnailId": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        ],
        "tags": [
          "Posts"
        ]
      }
    },
    "/posts/{postId}/history": {
      "get": {
        "summary": "Get post history",
        "description": "get list of history changes of post by its ID - without content",
        "operationId": "Posts_GetPostHistory",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetPostHistoryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Posts"
        ]
      }
    },
    "/posts/{postId}/history/{postHistoryId}/content": {
      "get": {
        "summary": "Get post history content",
        "description": "get content of single update iteration of post",
        "operationId": "Posts_GetPostHistoryById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbHistoryPost"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "postHistoryId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Posts"
        ]
      }
    },
    "/tags/worlds": {
      "get": {
        "summary": "Get available world tags",
        "description": "gets list of tags, that are usable for worlds",
        "operationId": "Tags_GetAvailableWorldTags",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetAvailableWorldTagsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Tags"
        ]
      },
      "post": {
        "summary": "Create available world tag",
        "description": "creates new tag, that can be assigned to worlds",
        "operationId": "Tags_CreateAvailableWorldTag",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbViewTag"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbCreateAvailableWorldTagRequest"
            }
          }
        ],
        "tags": [
          "Tags"
        ]
      }
    },
    "/tags/worlds/{tagId}": {
      "delete": {
        "summary": "Delete available world tag",
        "description": "deletes available world tag and removes all its assignments",
        "operationId": "Tags_DeleteAvailableWorldTag",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "tagId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Tags"
        ]
      },
      "patch": {
        "summary": "Update available world tag",
        "description": "updates world-assignable tag",
        "operationId": "Tags_UpdateAvailableWorldTag",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbViewTag"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "tagId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "newTag": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "Tags"
        ]
      }
    },
    "/users": {
      "get": {
        "summary": "Get list of users",
        "description": "returns list of users",
        "operationId": "Users_GetUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetUsersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Users"
        ]
      },
      "post": {
        "summary": "Create new user",
        "description": "use this API to create a new user",
        "operationId": "Users_CreateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCreateUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbCreateUserRequest"
            }
          }
        ],
        "tags": [
          "Users"
        ]
      },
      "patch": {
        "summary": "Update user",
        "description": "use this API to update user",
        "operationId": "Users_UpdateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbUpdateUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbUpdateUserRequest"
            }
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/users/id/{userId}": {
      "get": {
        "summary": "Get user",
        "description": "returns information about one user",
        "operationId": "Users_GetUserById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbViewUser"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/users/login": {
      "post": {
        "summary": "Login user",
        "description": "login user - get user object and set HttpOnly cookies",
        "operationId": "Users_LoginUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbLoginUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbLoginUserRequest"
            }
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/users/logout": {
      "post": {
        "summary": "Logout user",
        "description": "logout user - it clears HttpOnly cookies - no request data required",
        "operationId": "Users_LogoutUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/users/reset/send-code": {
      "post": {
        "summary": "Request password reset",
        "description": "in case a user forgot their password, they can request a password reset using this endpoint",
        "operationId": "Users_ResetPasswordSendCode",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbResetPasswordSendCodeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbResetPasswordSendCodeRequest"
            }
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/users/reset/verify-code": {
      "post": {
        "summary": "Confirm password reset",
        "description": "in case a user forgot their password, they can confirm the password reset using this endpoint",
        "operationId": "Users_ResetPasswordVerifyCode",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbResetPasswordVerifyCodeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbResetPasswordVerifyCodeRequest"
            }
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/users/reset/verify-code-validity": {
      "get": {
        "summary": "Validate reset password secret code",
        "description": "validate reset password secret code",
        "operationId": "Users_ResetPasswordVerifyCodeValidity",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbResetPasswordVerifyCodeValidityResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "secretCode",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/users/roles": {
      "get": {
        "summary": "Get user roles (admin, moderator, etc.)",
        "description": "returns full list of user roles",
        "operationId": "Users_GetUserRoles",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetUserRolesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Users"
        ]
      },
      "post": {
        "summary": "Add role to user",
        "description": "adds new role to user",
        "operationId": "Users_AddRoleToUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbAddRoleToUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbAddRoleToUserRequest"
            }
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/users/{userId}/avatar": {
      "post": {
        "summary": "Upload user avatar",
        "description": "uploads an user avatar",
        "operationId": "Users_UploadUserAvatar",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbUploadUserAvatarResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/users/{userId}/evaluation-vote": {
      "get": {
        "summary": "Get evaluation votes by user id",
        "description": "get evaluation votes by user id",
        "operationId": "Users_GetEvaluationVotesByUserId",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetEvaluationVotesByUserIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Users"
        ]
      },
      "post": {
        "summary": "Create or update evaluation vote",
        "description": "create or update evaluation vote",
        "operationId": "Users_CreateOrUpdateEvaluationVote",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCreateOrUpdateEvaluationVoteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "evaluationId": {
                  "type": "integer",
                  "format": "int32"
                },
                "userIdVoter": {
                  "type": "integer",
                  "format": "int32"
                },
                "value": {
                  "type": "number",
                  "format": "double"
                }
              },
              "title": "Create or update evaluation"
            }
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/users/{userId}/evaluation-vote/type/{type}/average": {
      "get": {
        "summary": "Get average user evaluation",
        "description": "get average user evaluation by type",
        "operationId": "Users_GetAverageUserEvaluationsByType",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetAverageUserEvaluationsByTypeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "type",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/users/{userId}/evaluation-vote/voter/{userIdVoter}": {
      "get": {
        "summary": "Get evaluation votes by user id and voter",
        "description": "get evaluation votes by user id and voter",
        "operationId": "Users_GetEvaluationVotesByUserIdAndVoter",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetEvaluationVotesByUserIdAndVoterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "userIdVoter",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/users/{userId}/evaluation-vote/{evaluationId}/voter/{userIdVoter}": {
      "delete": {
        "summary": "Delete evaluation vote",
        "description": "delete evaluation vote",
        "operationId": "Users_DeleteEvaluationVote",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbDeleteEvaluationVoteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "evaluationId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "userIdVoter",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/users/{userId}/images": {
      "get": {
        "summary": "Get user images",
        "description": "get images of user by userID - filterable by image type",
        "operationId": "Users_GetUserImages",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetImagesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "imageTypeId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/users/{userId}/introduction": {
      "patch": {
        "summary": "Update user introduction",
        "description": "use this API to update user introduction",
        "operationId": "Users_UpdateUserIntroduction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbPost"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "content": {
                  "type": "string"
                },
                "saveAsDraft": {
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/users/{userId}/posts": {
      "get": {
        "summary": "Get user posts",
        "description": "get posts of user by userID",
        "operationId": "Users_GetUserPosts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetUserPostsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "postTypeId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/users/{userId}/roles/{roleId}": {
      "delete": {
        "summary": "Remove role from user",
        "description": "removes role from user",
        "operationId": "Users_RemoveRoleFromUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbRemoveRoleFromUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/users/{userId}/worlds": {
      "get": {
        "summary": "Get creator's worlds",
        "description": "gets list of worlds that the creator is part of",
        "operationId": "Users_GetWorldsOfCreator",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetWorldsOfCreatorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/verify": {
      "post": {
        "summary": "Verify email",
        "description": "verify user email",
        "operationId": "Verify_VerifyEmail",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbVerifyEmailResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbVerifyEmailRequest"
            }
          }
        ],
        "tags": [
          "Verify"
        ]
      }
    },
    "/worlds": {
      "get": {
        "summary": "Get worlds ",
        "description": "gets list of worlds",
        "operationId": "Worlds_GetWorlds",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetWorldsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "public",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "tags",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Worlds"
        ]
      },
      "post": {
        "summary": "Create world",
        "description": "creates completely new world",
        "operationId": "Worlds_CreateWorld",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbWorld"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pbCreateWorldRequest"
            }
          }
        ],
        "tags": [
          "Worlds"
        ]
      }
    },
    "/worlds/activity/daily": {
      "get": {
        "summary": "Get world(s) daily activity",
        "description": "gets activity by day",
        "operationId": "Worlds_GetWorldDailyActivity",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetWorldDailyActivityResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "worldId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "dateFrom",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "Worlds"
        ]
      }
    },
    "/worlds/activity/monthly": {
      "get": {
        "summary": "Get world(s) monthly activity",
        "description": "gets world activity grouped by month",
        "operationId": "Worlds_GetWorldMonthlyActivity",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetWorldMonthlyActivityResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "worldId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "dateFrom",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "Worlds"
        ]
      }
    },
    "/worlds/{worldId}": {
      "get": {
        "summary": "Get world by ID ",
        "description": "gets world by ID",
        "operationId": "Worlds_GetWorldById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbWorld"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "worldId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Worlds"
        ]
      },
      "patch": {
        "summary": "Update world",
        "description": "updates world properties (NO images or stats!)",
        "operationId": "Worlds_UpdateWorld",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbWorld"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "worldId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "shortDescription": {
                  "type": "string"
                },
                "public": {
                  "type": "boolean"
                },
                "basedOn": {
                  "type": "string"
                },
                "descriptionPostId": {
                  "type": "integer",
                  "format": "int32"
                },
                "imageAvatarId": {
                  "type": "integer",
                  "format": "int32"
                },
                "imageThumbnailId": {
                  "type": "integer",
                  "format": "int32"
                },
                "imageHeaderId": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        ],
        "tags": [
          "Worlds"
        ]
      }
    },
    "/worlds/{worldId}/admin": {
      "get": {
        "summary": "Get world admins",
        "description": "returns admins and admin requests for world",
        "operationId": "Worlds_GetWorldAdmins",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetWorldAdminsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "worldId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Worlds"
        ]
      },
      "delete": {
        "summary": "Delete world admin",
        "description": "deletes world admin",
        "operationId": "Worlds_DeleteWorldAdmin",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "worldId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "userId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Worlds"
        ]
      },
      "post": {
        "summary": "Create world admin",
        "description": "adds request to become admin of the world",
        "operationId": "Worlds_CreateWorldAdmin",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbWorldAdmin"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "worldId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "motivationalLetter": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "Worlds"
        ]
      },
      "patch": {
        "summary": "Update world admin",
        "description": "updates world admin request (approve / decline)",
        "operationId": "Worlds_UpdateWorldAdmin",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbWorldAdmin"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "worldId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "userId": {
                  "type": "integer",
                  "format": "int32"
                },
                "superAdmin": {
                  "type": "boolean"
                },
                "approved": {
                  "type": "integer",
                  "format": "int32"
                },
                "motivationalLetter": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "Worlds"
        ]
      }
    },
    "/worlds/{worldId}/images": {
      "post": {
        "summary": "Upload image for world",
        "description": "uploads and sets new image for given world",
        "operationId": "Worlds_UploadWorldImage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbImage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "worldId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "byte"
                },
                "imageTypeId": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        ],
        "tags": [
          "Worlds"
        ]
      }
    },
    "/worlds/{worldId}/introduction": {
      "patch": {
        "summary": "Update world introduction",
        "description": "creates/updates world introduction",
        "operationId": "Worlds_UpdateWorldIntroduction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbPost"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "worldId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "content": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "Worlds"
        ]
      }
    },
    "/worlds/{worldId}/locations": {
      "get": {
        "summary": "Get world locations",
        "description": "returns world locations",
        "operationId": "Locations_GetWorldLocations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetWorldLocationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "worldId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Locations"
        ]
      },
      "delete": {
        "summary": "Delete world location",
        "description": "deletes location from the world",
        "operationId": "Locations_DeleteWorldLocation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "worldId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "locationId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Locations"
        ]
      },
      "post": {
        "summary": "Create world location",
        "description": "creates a new location in the world",
        "operationId": "Locations_CreateWorldLocation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbViewLocation"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "worldId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "thumbnailImageId": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        ],
        "tags": [
          "Locations"
        ]
      }
    },
    "/worlds/{worldId}/maps": {
      "get": {
        "summary": "Get world maps",
        "description": "returns maps of the world",
        "operationId": "Maps_GetWorldMaps",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbGetWorldMapResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "worldId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Maps"
        ]
      },
      "post": {
        "summary": "Create world map",
        "description": "creates a new map for the world",
        "operationId": "Maps_CreateWorldMap",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbCreateWorldMapResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "worldId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "width": {
                  "type": "integer",
                  "format": "int32"
                },
                "height": {
                  "type": "integer",
                  "format": "int32"
                },
                "thumbnailImageId": {
                  "type": "integer",
                  "format": "int32"
                },
                "layerImageId": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        ],
        "tags": [
          "Maps"
        ]
      }
    },
    "/worlds/{worldId}/maps/{mapId}": {
      "delete": {
        "summary": "Delete world map",
        "description": "deletes a map from the world",
        "operationId": "Maps_DeleteWorldMap",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "worldId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "mapId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Maps"
        ]
      }
    },
    "/worlds/{worldId}/tags": {
      "delete": {
        "summary": "Remove world tag",
        "description": "removes tag from the world",
        "operationId": "Worlds_RemoveWorldTag",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "worldId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "tagId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Worlds"
        ]
      },
      "post": {
        "summary": "Add tag world",
        "description": "assigns one tag to the world",
        "operationId": "Worlds_AddWorldTag",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pbTag"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "worldId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "tagId": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        ],
        "tags": [
          "Worlds"
        ]
      }
    }
  },
  "definitions": {
    "pbAddChatMessageRequest": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string"
        }
      }
    },
    "pbAddChatMessageResponse": {
      "type": "object",
      "properties": {
        "message": {
          "$ref": "#/definitions/pbChatMessage"
        }
      }
    },
    "pbAddRoleToUserRequest": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "integer",
          "format": "int32"
        },
        "roleId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "pbAddRoleToUserResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "pbAverageEvaluationVote": {
      "type": "object",
      "properties": {
        "evaluationId": {
          "type": "integer",
          "format": "int32"
        },
        "userId": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "average": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "pbChatMessage": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "userId": {
          "type": "integer",
          "format": "int32"
        },
        "username": {
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "pbCreateAvailableWorldTagRequest": {
      "type": "object",
      "properties": {
        "tag": {
          "type": "string"
        }
      }
    },
    "pbCreateEntityGroupRequest": {
      "type": "object",
      "properties": {
        "parentEntityGroupId": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "pbCreateOrUpdateEvaluationVoteResponse": {
      "type": "object",
      "properties": {
        "evaluationVote": {
          "$ref": "#/definitions/pbEvaluationVote"
        }
      }
    },
    "pbCreatePostRequest": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "postTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "isDraft": {
          "type": "boolean"
        },
        "isPrivate": {
          "type": "boolean"
        }
      }
    },
    "pbCreateUserRequest": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "pbCreateUserResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/pbUser"
        }
      }
    },
    "pbCreateWorldMapResponse": {
      "type": "object",
      "properties": {
        "map": {
          "$ref": "#/definitions/pbViewMap"
        },
        "layer": {
          "$ref": "#/definitions/pbViewMapLayer"
        }
      }
    },
    "pbCreateWorldRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "shortDescription": {
          "type": "string"
        },
        "basedOn": {
          "type": "string"
        }
      }
    },
    "pbDataHistoryPost": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "postId": {
          "type": "integer",
          "format": "int32"
        },
        "postTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "userId": {
          "type": "integer",
          "format": "int32"
        },
        "title": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "deletedAt": {
          "type": "string",
          "format": "date-time"
        },
        "lastUpdatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "lastUpdatedUserId": {
          "type": "integer",
          "format": "int32"
        },
        "isDraft": {
          "type": "boolean"
        },
        "isPrivate": {
          "type": "boolean"
        },
        "postTypeName": {
          "type": "string"
        },
        "postTypeDraftable": {
          "type": "boolean"
        },
        "postTypePrivatable": {
          "type": "boolean"
        },
        "imageThumbnailId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "pbDataPost": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "postTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "userId": {
          "type": "integer",
          "format": "int32"
        },
        "title": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "deletedAt": {
          "type": "string",
          "format": "date-time"
        },
        "lastUpdatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "lastUpdatedUserId": {
          "type": "integer",
          "format": "int32"
        },
        "isDraft": {
          "type": "boolean"
        },
        "isPrivate": {
          "type": "boolean"
        },
        "imageThumbnailId": {
          "type": "integer",
          "format": "int32"
        },
        "imageThumbnailUrl": {
          "type": "string"
        }
      }
    },
    "pbDataPostType": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "draftable": {
          "type": "boolean"
        },
        "privatable": {
          "type": "boolean"
        }
      }
    },
    "pbDeleteChatMessageResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "pbDeleteEvaluationVoteResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "pbDeletePostResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "pbEntity": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "$ref": "#/definitions/pbEntityType"
        },
        "postId": {
          "type": "integer",
          "format": "int32"
        },
        "mapId": {
          "type": "integer",
          "format": "int32"
        },
        "locationId": {
          "type": "integer",
          "format": "int32"
        },
        "imageId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "pbEntityGroup": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "pbEntityGroupContent": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "entityGroupId": {
          "type": "integer",
          "format": "int32"
        },
        "position": {
          "type": "integer",
          "format": "int32"
        },
        "contentEntityId": {
          "type": "integer",
          "format": "int32"
        },
        "contentEntityGroupId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "pbEntityList": {
      "type": "object",
      "properties": {
        "entities": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbEntity"
          }
        },
        "posts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbDataPost"
          }
        },
        "maps": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbViewMap"
          }
        },
        "locations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbViewLocation"
          }
        },
        "images": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbImage"
          }
        }
      }
    },
    "pbEntityType": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "POST",
        "MAP",
        "LOCATION",
        "CHARACTER",
        "IMAGE"
      ],
      "default": "UNKNOWN"
    },
    "pbEvaluation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/pbEvaluationType"
        }
      }
    },
    "pbEvaluationType": {
      "type": "string",
      "enum": [
        "self",
        "dm"
      ],
      "default": "self"
    },
    "pbEvaluationVote": {
      "type": "object",
      "properties": {
        "evaluationId": {
          "type": "integer",
          "format": "int32"
        },
        "userId": {
          "type": "integer",
          "format": "int32"
        },
        "userIdVoter": {
          "type": "integer",
          "format": "int32"
        },
        "value": {
          "type": "number",
          "format": "double"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "pbGetAvailableWorldTagsResponse": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbViewTag"
          }
        }
      }
    },
    "pbGetAverageUserEvaluationsByTypeResponse": {
      "type": "object",
      "properties": {
        "averageEvaluationVote": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbAverageEvaluationVote"
          }
        }
      }
    },
    "pbGetChatMessagesResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbChatMessage"
          }
        }
      }
    },
    "pbGetEvaluationByIdResponse": {
      "type": "object",
      "properties": {
        "evaluation": {
          "$ref": "#/definitions/pbEvaluation"
        }
      }
    },
    "pbGetEvaluationVotesByUserIdAndVoterResponse": {
      "type": "object",
      "properties": {
        "evaluationVote": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbEvaluationVote"
          }
        }
      }
    },
    "pbGetEvaluationVotesByUserIdResponse": {
      "type": "object",
      "properties": {
        "evaluationVote": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbEvaluationVote"
          }
        }
      }
    },
    "pbGetEvaluationsByTypeResponse": {
      "type": "object",
      "properties": {
        "evaluation": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbEvaluation"
          }
        }
      }
    },
    "pbGetImagesResponse": {
      "type": "object",
      "properties": {
        "images": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbImage"
          }
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "pbGetMapLayersResponse": {
      "type": "object",
      "properties": {
        "layers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbViewMapLayer"
          }
        }
      }
    },
    "pbGetMapPinTypesResponse": {
      "type": "object",
      "properties": {
        "pinTypes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbMapPinType"
          }
        }
      }
    },
    "pbGetMapPinsResponse": {
      "type": "object",
      "properties": {
        "pins": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbViewMapPin"
          }
        }
      }
    },
    "pbGetMenuItemContentResponse": {
      "type": "object",
      "properties": {
        "menuItemEntityGroups": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbMenuItemEntityGroup"
          }
        },
        "content": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbEntityGroupContent"
          }
        },
        "entityList": {
          "$ref": "#/definitions/pbEntityList"
        }
      }
    },
    "pbGetMenuItemPostsByMenuIdResponse": {
      "type": "object",
      "properties": {
        "menuItemPosts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbMenuItemPost"
          }
        }
      }
    },
    "pbGetMenuItemPostsResponse": {
      "type": "object",
      "properties": {
        "menuItemPosts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbMenuItemPost"
          }
        }
      }
    },
    "pbGetMenuItemsResponse": {
      "type": "object",
      "properties": {
        "menuItems": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbMenuItem"
          }
        }
      }
    },
    "pbGetPostHistoryResponse": {
      "type": "object",
      "properties": {
        "historyPosts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbHistoryPost"
          }
        }
      }
    },
    "pbGetPostTypesResponse": {
      "type": "object",
      "properties": {
        "postTypes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbDataPostType"
          }
        }
      }
    },
    "pbGetUserPostsResponse": {
      "type": "object",
      "properties": {
        "posts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbPost"
          }
        }
      }
    },
    "pbGetUserRolesResponse": {
      "type": "object",
      "properties": {
        "role": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbRole"
          }
        }
      }
    },
    "pbGetUsersResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbUser"
          }
        }
      }
    },
    "pbGetWorldAdminsResponse": {
      "type": "object",
      "properties": {
        "worldAdmins": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbWorldAdmin"
          }
        }
      }
    },
    "pbGetWorldDailyActivityResponse": {
      "type": "object",
      "properties": {
        "activity": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbWorldActivity"
          }
        }
      }
    },
    "pbGetWorldLocationResponse": {
      "type": "object",
      "properties": {
        "locations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbViewLocation"
          }
        }
      }
    },
    "pbGetWorldMapResponse": {
      "type": "object",
      "properties": {
        "maps": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbViewMap"
          }
        }
      }
    },
    "pbGetWorldMonthlyActivityResponse": {
      "type": "object",
      "properties": {
        "activity": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbWorldActivity"
          }
        }
      }
    },
    "pbGetWorldsOfCreatorResponse": {
      "type": "object",
      "properties": {
        "worlds": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbWorldOfCreatorResponse"
          }
        }
      }
    },
    "pbGetWorldsResponse": {
      "type": "object",
      "properties": {
        "worlds": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbWorld"
          }
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "pbHistoryPost": {
      "type": "object",
      "properties": {
        "post": {
          "$ref": "#/definitions/pbDataHistoryPost"
        },
        "postType": {
          "$ref": "#/definitions/pbDataPostType"
        }
      }
    },
    "pbImage": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "imgGuid": {
          "type": "string"
        },
        "imageTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "baseUrl": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "userId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "pbLoginUserRequest": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "pbLoginUserResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/pbUser"
        },
        "sessionId": {
          "type": "string"
        },
        "accessTokenExpiresAt": {
          "type": "string",
          "format": "date-time"
        },
        "refreshTokenExpiresAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "pbMapPinType": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "mapId": {
          "type": "integer",
          "format": "int32"
        },
        "shape": {
          "$ref": "#/definitions/pbPinShape"
        },
        "backgroundColor": {
          "type": "string"
        },
        "borderColor": {
          "type": "string"
        },
        "iconColor": {
          "type": "string"
        },
        "icon": {
          "type": "string"
        },
        "iconSize": {
          "type": "integer",
          "format": "int32"
        },
        "width": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "pbMenuItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "menuId": {
          "type": "integer",
          "format": "int32"
        },
        "code": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "position": {
          "type": "integer",
          "format": "int32"
        },
        "isMain": {
          "type": "boolean"
        },
        "descriptionPostId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "pbMenuItemEntityGroup": {
      "type": "object",
      "properties": {
        "menuId": {
          "type": "integer",
          "format": "int32"
        },
        "menuItemId": {
          "type": "integer",
          "format": "int32"
        },
        "entityGroupId": {
          "type": "integer",
          "format": "int32"
        },
        "position": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "pbMenuItemPost": {
      "type": "object",
      "properties": {
        "menuItemId": {
          "type": "integer",
          "format": "int32"
        },
        "postId": {
          "type": "integer",
          "format": "int32"
        },
        "position": {
          "type": "integer",
          "format": "int32"
        },
        "post": {
          "$ref": "#/definitions/pbDataPost"
        }
      }
    },
    "pbPinShape": {
      "type": "string",
      "enum": [
        "SQUARE",
        "TRIANGLE",
        "PIN",
        "CIRCLE",
        "HEXAGON",
        "OCTAGON",
        "STAR",
        "DIAMOND",
        "PENTAGON",
        "HEART",
        "CLOUD"
      ],
      "default": "SQUARE"
    },
    "pbPost": {
      "type": "object",
      "properties": {
        "post": {
          "$ref": "#/definitions/pbDataPost"
        },
        "postType": {
          "$ref": "#/definitions/pbDataPostType"
        }
      }
    },
    "pbRemoveRoleFromUserResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "pbResetPasswordSendCodeRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        }
      }
    },
    "pbResetPasswordSendCodeResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "pbResetPasswordVerifyCodeRequest": {
      "type": "object",
      "properties": {
        "secretCode": {
          "type": "string"
        },
        "newPassword": {
          "type": "string"
        }
      }
    },
    "pbResetPasswordVerifyCodeResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "pbResetPasswordVerifyCodeValidityResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "pbRole": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "pbTag": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "tag": {
          "type": "string"
        }
      }
    },
    "pbUpdateMapPinTypeResponse": {
      "type": "object",
      "properties": {
        "pinType": {
          "$ref": "#/definitions/pbMapPinType"
        }
      }
    },
    "pbUpdateMenuPostsResponse": {
      "type": "object",
      "properties": {
        "menuItemPosts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pbMenuItemPost"
          }
        }
      }
    },
    "pbUpdateUserRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "username": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "imgId": {
          "type": "integer",
          "format": "int32"
        },
        "introductionPostId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "pbUpdateUserResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/pbUser"
        }
      }
    },
    "pbUploadImageRequest": {
      "type": "object",
      "properties": {
        "filename": {
          "type": "string"
        },
        "data": {
          "type": "string",
          "format": "byte"
        },
        "imageTypeId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "pbUploadUserAvatarResponse": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "integer",
          "format": "int32"
        },
        "image": {
          "$ref": "#/definitions/pbImage"
        }
      }
    },
    "pbUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "username": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "imgId": {
          "type": "integer",
          "format": "int32"
        },
        "passwordChangedAt": {
          "type": "string",
          "format": "date-time"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "isEmailVerified": {
          "type": "boolean"
        },
        "img": {
          "$ref": "#/definitions/pbImage"
        },
        "introductionPostId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "pbVerifyEmailRequest": {
      "type": "object",
      "properties": {
        "emailId": {
          "type": "string",
          "format": "int64"
        },
        "secretCode": {
          "type": "string"
        }
      }
    },
    "pbVerifyEmailResponse": {
      "type": "object",
      "properties": {
        "isVerified": {
          "type": "boolean"
        }
      }
    },
    "pbViewLocation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "postId": {
          "type": "integer",
          "format": "int32"
        },
        "thumbnailImageId": {
          "type": "integer",
          "format": "int32"
        },
        "thumbnailImageUrl": {
          "type": "string"
        }
      }
    },
    "pbViewMap": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "width": {
          "type": "integer",
          "format": "int32"
        },
        "height": {
          "type": "integer",
          "format": "int32"
        },
        "thumbnailImageId": {
          "type": "integer",
          "format": "int32"
        },
        "thumbnailImageUrl": {
          "type": "string"
        }
      }
    },
    "pbViewMapLayer": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "mapId": {
          "type": "integer",
          "format": "int32"
        },
        "imageId": {
          "type": "integer",
          "format": "int32"
        },
        "imageUrl": {
          "type": "string"
        },
        "isMain": {
          "type": "boolean"
        },
        "enabled": {
          "type": "boolean"
        },
        "sublayer": {
          "type": "boolean"
        }
      }
    },
    "pbViewMapPin": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "mapId": {
          "type": "integer",
          "format": "int32"
        },
        "mapPinTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "locationId": {
          "type": "integer",
          "format": "int32"
        },
        "mapLayerId": {
          "type": "integer",
          "format": "int32"
        },
        "x": {
          "type": "integer",
          "format": "int32"
        },
        "y": {
          "type": "integer",
          "format": "int32"
        },
        "locationName": {
          "type": "string"
        },
        "locationPostId": {
          "type": "integer",
          "format": "int32"
        },
        "locationDescription": {
          "type": "string"
        },
        "locationThumbnailImageId": {
          "type": "integer",
          "format": "int32"
        },
        "locationThumbnailImageUrl": {
          "type": "string"
        }
      }
    },
    "pbViewMenu": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "code": {
          "type": "string"
        },
        "headerImageId": {
          "type": "integer",
          "format": "int32"
        },
        "headerImageUrl": {
          "type": "string"
        }
      }
    },
    "pbViewTag": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "tag": {
          "type": "string"
        },
        "count": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "pbViewUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "username": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "imgId": {
          "type": "integer",
          "format": "int32"
        },
        "passwordChangedAt": {
          "type": "string",
          "format": "date-time"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "isEmailVerified": {
          "type": "boolean"
        },
        "avatarImageUrl": {
          "type": "string"
        },
        "avatarImageGuid": {
          "type": "string"
        },
        "introductionPostId": {
          "type": "integer",
          "format": "int32"
        },
        "introductionPostDeletedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "pbWorld": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "public": {
          "type": "boolean"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "basedOn": {
          "type": "string"
        },
        "shortDescription": {
          "type": "string"
        },
        "imageAvatar": {
          "type": "string"
        },
        "imageThumbnail": {
          "type": "string"
        },
        "imageHeader": {
          "type": "string"
        },
        "descriptionPostId": {
          "type": "integer",
          "format": "int32"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "activityPostCount": {
          "type": "integer",
          "format": "int32"
        },
        "activityQuestCount": {
          "type": "integer",
          "format": "int32"
        },
        "activityResourceCount": {
          "type": "integer",
          "format": "int32"
        },
        "worldMenuId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "pbWorldActivity": {
      "type": "object",
      "properties": {
        "worldId": {
          "type": "integer",
          "format": "int32"
        },
        "date": {
          "type": "string",
          "format": "date-time"
        },
        "activityPostCount": {
          "type": "integer",
          "format": "int32"
        },
        "activityQuestCount": {
          "type": "integer",
          "format": "int32"
        },
        "activityResourceCount": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "pbWorldAdmin": {
      "type": "object",
      "properties": {
        "worldId": {
          "type": "integer",
          "format": "int32"
        },
        "userId": {
          "type": "integer",
          "format": "int32"
        },
        "user": {
          "$ref": "#/definitions/pbViewUser"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "superAdmin": {
          "type": "boolean"
        },
        "approved": {
          "type": "integer",
          "format": "int32"
        },
        "motivationalLetter": {
          "type": "string"
        }
      }
    },
    "pbWorldOfCreatorResponse": {
      "type": "object",
      "properties": {
        "world": {
          "$ref": "#/definitions/pbWorld"
        },
        "superAdmin": {
          "type": "boolean"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
