// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.17.2

package db

import (
	"context"
	"database/sql"
	"time"

	"github.com/google/uuid"
)

type Querier interface {
	AddChatMessage(ctx context.Context, arg AddChatMessageParams) (Chat, error)
	AddUserPasswordReset(ctx context.Context, arg AddUserPasswordResetParams) (UserPasswordReset, error)
	AddUserRole(ctx context.Context, arg AddUserRoleParams) (UserRole, error)
	CreateEvaluationVote(ctx context.Context, arg CreateEvaluationVoteParams) (EvaluationVote, error)
	CreateImage(ctx context.Context, arg CreateImageParams) (Image, error)
	CreateSession(ctx context.Context, arg CreateSessionParams) (Session, error)
	CreateUser(ctx context.Context, arg CreateUserParams) (User, error)
	CreateVerifyEmail(ctx context.Context, arg CreateVerifyEmailParams) (VerifyEmail, error)
	CreateWorld(ctx context.Context, arg CreateWorldParams) (World, error)
	CreateWorldAdmin(ctx context.Context, arg CreateWorldAdminParams) (WorldAdmin, error)
	CreateWorldImages(ctx context.Context, worldID int32) error
	CreateWorldStats(ctx context.Context, worldID int32) error
	DeleteChatMessage(ctx context.Context, id int64) error
	DeleteEvaluationVote(ctx context.Context, arg DeleteEvaluationVoteParams) error
	DeleteImage(ctx context.Context, id int32) error
	DeleteUserPasswordReset(ctx context.Context, arg DeleteUserPasswordResetParams) error
	DeleteWorld(ctx context.Context, worldID int32) error
	DeleteWorldImages(ctx context.Context, worldID int32) error
	DeleteWorldStats(ctx context.Context, worldID int32) error
	DeleteWorldStatsHistory(ctx context.Context, worldID sql.NullInt32) error
	GetAverageUserEvaluationsByType(ctx context.Context, arg GetAverageUserEvaluationsByTypeParams) ([]GetAverageUserEvaluationsByTypeRow, error)
	GetChatMessage(ctx context.Context, id int64) (GetChatMessageRow, error)
	GetChatMessages(ctx context.Context, arg GetChatMessagesParams) ([]GetChatMessagesRow, error)
	GetEvaluationById(ctx context.Context, evaluationID int32) (Evaluation, error)
	GetEvaluationVoteByEvaluationIdUserIdAndVoter(ctx context.Context, arg GetEvaluationVoteByEvaluationIdUserIdAndVoterParams) (EvaluationVote, error)
	GetEvaluationVotesByUserId(ctx context.Context, userID int32) ([]EvaluationVote, error)
	GetEvaluationVotesByUserIdAndVoter(ctx context.Context, arg GetEvaluationVotesByUserIdAndVoterParams) ([]EvaluationVote, error)
	GetEvaluationsByType(ctx context.Context, evaluationType EvaluationType) ([]Evaluation, error)
	GetImageByGUID(ctx context.Context, imgGuid uuid.NullUUID) (Image, error)
	GetImageById(ctx context.Context, id int32) (Image, error)
	GetImageTypeById(ctx context.Context, id int32) (ImageType, error)
	GetImageTypeByName(ctx context.Context, name string) (ImageType, error)
	GetImagesByImageTypeId(ctx context.Context, imgTypeID sql.NullInt32) ([]Image, error)
	GetSession(ctx context.Context, id uuid.UUID) (Session, error)
	GetUserByEmail(ctx context.Context, email string) (User, error)
	GetUserById(ctx context.Context, id int32) (User, error)
	GetUserByUsername(ctx context.Context, username string) (User, error)
	GetUserPasswordReset(ctx context.Context, code string) (UserPasswordReset, error)
	GetUserRoles(ctx context.Context, userID int32) ([]GetUserRolesRow, error)
	GetUsers(ctx context.Context, arg GetUsersParams) ([]GetUsersRow, error)
	GetWorldByID(ctx context.Context, worldID int32) (ViewWorld, error)
	GetWorldImages(ctx context.Context, worldID int32) (WorldImage, error)
	GetWorldStats(ctx context.Context, worldID int32) (WorldStat, error)
	GetWorldStatsHistory(ctx context.Context, startDate time.Time) ([]WorldStatsHistory, error)
	GetWorlds(ctx context.Context, arg GetWorldsParams) ([]ViewWorld, error)
	HasUserRole(ctx context.Context, arg HasUserRoleParams) (HasUserRoleRow, error)
	InsertWorldStatsHistory(ctx context.Context, arg InsertWorldStatsHistoryParams) (WorldStatsHistory, error)
	RemoveUserRole(ctx context.Context, arg RemoveUserRoleParams) error
	UpdateEvaluationVote(ctx context.Context, arg UpdateEvaluationVoteParams) (EvaluationVote, error)
	UpdateImage(ctx context.Context, arg UpdateImageParams) (Image, error)
	UpdateUser(ctx context.Context, arg UpdateUserParams) (User, error)
	UpdateVerifyEmail(ctx context.Context, arg UpdateVerifyEmailParams) (VerifyEmail, error)
	UpdateWorld(ctx context.Context, arg UpdateWorldParams) (World, error)
	UpdateWorldImages(ctx context.Context, arg UpdateWorldImagesParams) (WorldImage, error)
	UpdateWorldStats(ctx context.Context, arg UpdateWorldStatsParams) (WorldStat, error)
}

var _ Querier = (*Queries)(nil)
